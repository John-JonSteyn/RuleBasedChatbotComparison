#separator:tab
#html:false
#guid column:1
#notetype column:2
#deck column:3
g:Mu[6U^tp	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why can’t a single program “just keep me safe online”?	Security is not one thing; it’s a set of context‑dependent goals (what to protect, from whom, and at what cost). Point tools reduce risk but cannot anticipate all contexts or human choices, so real security still requires judgment and trade‑offs.
m+h?:.d6U~	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What makes cybersecurity different from other services we outsource (like auto maintenance)?	Unlike wear‑and‑tear or natural failures, cybersecurity pits you against active human opponents who adapt to your defenses. Static, “set‑and‑forget” protections decay quickly against adversaries who learn and re‑plan.
f!r1n%=!Ag	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does a thinking adversary change defensive strategy?	It turns security into a contest of strategy and adaptation: no fixed perimeter suffices forever, so you design for monitoring, learning, and rapid change rather than permanent walls.
y}PJf+7wit	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What lesson do historical “unbreachable walls” teach defenders?	Fixed fortifications eventually fail to creative attackers; the durable advantage is agility—detecting changes, updating controls, and out‑thinking opponents.
g+n_f;,3`]	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do many users want security that requires “no thinking,” and why is that risky?	Modern life is cognitively overloaded, so people outsource decisions. That’s reasonable—but in security, fully outsourcing thought invites gaps attackers exploit (e.g., unreviewed defaults, unpatched systems, blindly approved prompts).
e?^N+X;pC_	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What two big psychology‑driven problem categories undermine security?	Human error (honest mistakes under normal work) and manipulation (adversaries triggering predictable non‑rational responses). Robust defenses assume both will happen.
daV3<c~Sfi	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is negativity bias and why does it matter to security habits?	Negativity bias means we overweight immediate threats and vivid losses. When cyber risk feels abstract or delayed, people under‑invest in prevention, skip patches, or reuse passwords because the pain isn’t “now.”
sX4Hl]-LEy	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does delay discounting affect patching and backups?	We devalue future consequences versus present effort. So inconvenient tasks with distant payoffs (backups, MFA enrollment) get deferred, even though one incident later proves they were critical.
nD)^$^^sVP	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is “mental automation,” and how does it create security mistakes?	Skills we repeat become automatic; attention drops. People click through certificate warnings, approve prompts, or reuse the same route (workflow) even when the context changed, causing “capture” errors.
IRvSumW@^n	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What’s a practical example of capture error online?	If users habitually click “Allow” to proceed with routine tasks, they may also allow a malicious browser permission or run an unknown installer because the motion is automatic, not deliberated.
xiuU+;doBd	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do “complex rule sets” produce confident, wrong decisions?	When many rules could apply, people pick one they recall and feel justified—even if it’s misapplied. They act “by a rule,” so they’re confident, making the error persistent and hard to coach away.
k=Mv]1u+HZ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can UIs reduce misapplied‑rule errors?	Make the applicable rule salient at the decision point (contextual guidance), hide options that are unsafe in that context, and show consequences before commit (e.g., “This shares payroll data outside your domain”).
cS{Z|QRjT?	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is “meta‑ignorance,” and why is it dangerous?	It’s not just lacking knowledge; it’s not knowing that you don’t know—or feeling pressure to act anyway. People skip expert help because everything seems fine “until the attack,” or because time/budget politics disincentivize escalation.
K3(5Uz[K6w	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	When should non‑experts default to expert help in security?	On cryptography choices, identity lifecycle design, incident triage, data classification, and any cross‑system change with unclear blast radius. A simple heuristic is: if failure modes reach outside your team, get a security SME.
A_uFb)I0QR	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is “wrong model stubbornness”?	We all reason with mental models. The failure isn’t merely an imperfect model—it’s clinging to the wrong model after contradictory evidence appears, ignoring disconfirming signals and over‑weighting confirming ones.
Cb1)l`%.EL	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does wrong model stubbornness show up during incidents?	Teams fixate on a favorite root cause (e.g., “it’s an insider,” “it’s a misconfig”) and reinterpret new indicators to fit, delaying containment of the real vector.
ili<0Sy}sI	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can teams counter wrong model stubbornness mid‑incident?	Run explicit “red team of the mind” drills: assign someone to defend alternative hypotheses, require evidence checklists for each, and time‑box model commitment with planned pivot points.
Aktc;0W}K3	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do attackers exploit human error directly versus opportunistically?	Directly: they craft inputs (emails, links, calls) to trigger capture errors or rule misapplication. Opportunistically: they scan for systems already misconfigured by honest mistakes (e.g., unchanged defaults, open buckets) and walk in.
yEb~B8i;e?	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do some old browser warnings fail users?	Frequent, low‑signal warnings trained people to click through. If an eventual malicious site triggers the same banner, the user’s automated behavior proceeds—proof that UX trains future security choices.
Kk4$$!Y.`3	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can “defense in depth” soften inevitable human mistakes?	Layer controls so a single mis‑click doesn’t cause catastrophe: least privilege, step‑up verification for sensitive actions, anomaly detection, and blast‑radius segmentation.
zE}gO2WT-X	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is action bias?	In stress, people prefer doing something—anything—over pausing. That impulse is often adaptive, but attackers add urgency to funnel victims into their chosen “something” (click, pay, disclose).
D[-o$)*Png	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do phishing emails weaponize action bias?	They add timers, threats of account closure, or “final notice” language to push you into fast action before you evaluate sender, link, and context.
Bk*M2Q8SRv	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is “emotional fallback,” and why do facts sometimes fail?	When reasoning feels insufficient, we switch to emotion‑driven choices. An attacker can escalate fear, anger, or affinity to bypass scrutiny—facts don’t land because the cognitive channel is temporarily down.
bHVEQ%s7If	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does pretexting use emotional fallback on the phone?	A caller fakes urgency or belonging (e.g., “doctor with a dying patient,” “new colleague who ‘just needs a code’”), trading on fear or camaraderie so staff give data without checking authority.
p77,Ztda1%	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does “deference to authority” remain a potent attack lever?	People suppress doubt when a request appears to come from a boss, vendor, regulator, or police. Impersonation plus urgency can override policy unless the workflow forces verification.
d3vseq3xs-	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should organizations blunt authority‑based scams?	Mandate independent verification paths for high‑risk asks (call‑back numbers from a directory you control, not from the message), require two‑person approval for sensitive data, and slow the process on purpose.
cC%Vi1$>zA	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do polished visuals trick even careful readers?	We have an emotional recognition pathway for images and logos; convincing branding creates a fast feeling of legitimacy that can briefly override what we “know,” nudging clicks before analysis catches up.
vQAG9&rtEO	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is one realistic takeaway from polished phishing templates?	Any user can feel a momentary “looks real” impulse—so design controls that catch clicks and authentications downstream (URL rewriting, safe‑link detonation, step‑up MFA for new destinations).
z{AE0L10V3	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does the stairwell “fire gate” analogy teach security designers?	People in panic don’t read manuals. The right control need not be impenetrable; it must gently interrupt the automatic behavior and redirect to safety at the exact moment it matters.
kG+)9N1>xM	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can we build “irrational modes” into security workflows?	Detect duress signals (bursts of risky clicks, unusual hour/location, urgent language) and temporarily restrict actions, add friction, or route to a human checkpoint—then auto‑resume once signals fade.
yu(ca[tuHe	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is “rational centering,” and how can a UI trigger it?	It’s nudging users from emotion back to deliberation. Simple prompts help: summarize the request in plain language, show consequences, require typed confirmations, or ask a short, non‑trivial question that forces slow thinking.
q8=d(pSr)[	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is “least privilege” a psychological as well as technical control?	It limits how much harm a single mistake or manipulation can cause. Humans will err; shrinking authority bounds turns errors into small, recoverable events instead of business‑ending ones.
y51FZ~-@jM	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is “separation of duties” still relevant in cloud‑first teams?	Spreading critical powers across people (or accounts) means an attacker must fool multiple humans or breach multiple keys—raising the cognitive and operational cost of a successful attack.
MC]:+Ai&2;	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why should teams plan explicitly for failure?	Incidents are guaranteed over time. Pre‑planned detection and recovery reduces panic, shortens downtime, and avoids rash decisions driven by action bias during a breach.
Jx&ZFrb}dt	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are “manageable decisions” in security programs?	Decisions sized to the decision‑maker’s expertise and context. Push high‑risk choices to specialists (e.g., managed detection and response); present non‑experts only with bounded, well‑framed options.
x$Uj-?(5^c	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Is “more training” the right answer to most psychology‑driven failures?	Often no. Training helps, but automation, guardrails, defaults, and expert‑in‑the‑loop design move the burden off average users who cannot be expected to out‑think professional attackers.
"I9[#PXG&^v"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a better investment than annual slide‑deck training alone?	Embed just‑in‑time guidance in the tools people already use, enforce safer defaults, add MFA everywhere feasible, and build escalation paths that are easy and stigma‑free.
K-t@q^_{z9	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do supply‑chain compromises complicate user decisions?	Signed, familiar software can still be poisoned upstream, so “trust the brand” heuristics fail. Controls must validate behavior, not just origin, and teams need playbooks for vendor‑driven incidents.
zUA1{ST7Gv	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What’s a concrete example of a supply‑chain lesson for responders?	According to Chapter 1 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, the 3CX incident showed how mixed signals and slow acknowledgment left users uncertain; programs need vendor‑independent validation (EDR, threat intel) and authority to quarantine even “trusted” tools while facts emerge.
LN?xD=1Ox*	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can defaults reduce capture errors at scale?	Ship secure baselines: disable dangerous macros, block old protocols, auto‑update, set strong password policies with MFA by default, and require warnings that actually block rather than nudge.
oThHg.7~PF	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do attackers love unchanged defaults on “things” (IoT, appliances)?	Defaults are predictable—exactly what adversaries need. According to Chapter 1 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, large IoT botnets have formed by scanning for factory credentials; change‑at‑first‑boot and network isolation are essential.
HgWVO.x)7V	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should alerts handle human attention limits?	Favor fewer, higher‑fidelity alerts with clear first actions. Floods train users to ignore; concise signals with one‑click safe responses reinforce good behavior.
CNe/T%}>CE	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can teams counter delay discounting for long‑horizon risks?	Convert future pain into present feedback: run realistic tabletop drills, publish time‑to‑recover metrics, simulate phishing with immediate coaching, and celebrate near‑misses caught by backups and MFA.
wYzk6_,M~~	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What policy makes pretexting harder without hurting service?	A published, universal verification rule: “We never share credentials or sensitive data based on inbound requests. We call you back at numbers listed in our directory.” Make exceptions impossible for a single superior to override on the spot.
qk14ETqX{z	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What UX pattern turns authority scams into dead ends?	Break the one‑channel trap: any request to move money, change payroll, or share data must switch channels (ticket → verified call, email → secure portal) and require a second approver.
sQQ44EMy$|	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can leaders reduce wrong‑model stubbornness across the org?	Make “changing your mind with new evidence” a praised behavior. Use post‑mortems to highlight model pivots that improved outcomes, and track hypothesis lifetime as a quality metric during incidents.
ESDWsGUA0Y	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What’s a simple, daily practice to reduce capture‑clicking?	Introduce “beat pause” friction before risky actions: hover‑delay on links to show destinations, require re‑authentication for admin tasks, and randomize review prompts so users can’t build a blind routine.
m]}x4>1s?m	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do affordances shape safer behavior by design?	The controls you expose teach users what “normal” looks like. If the UI always routes file sharing through a labeled, org‑approved channel, shadow IT feels abnormal and users self‑correct.
jId8,}8}yP	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What should non‑experts do when something “feels off” but they can’t articulate why?	Treat it as a real signal—stop, capture evidence (screenshots, headers), and escalate. Programs should reward this intuition; many manipulations are detected first as a gut check.
im5<}8<~&N	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why must managed security services still “think,” not just monitor?	Centralization helps, but autopilot creates new blind spots. Providers need authority to adapt controls, pursue hypotheses, and push client changes rapidly—thinking on behalf of many.
"b`U1$#af46"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What’s the most important mindset shift for building human‑aware defenses?	Assume people will be rushed, distracted, emotional, and occasionally deceived—and design so safety still emerges: reduce discretion where harm is high, add friction at the edge, and reserve difficult choices for experts.
ej&72e[MzV	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What’s the single clearest takeaway for everyday users?	Slow down at the moment of money, passwords, secrets, or software. If it is urgent and important, it can wait five minutes for verification—the pause is a powerful security control you can always apply.
j6YET,o{6J	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What organizational north star best aligns tech with human limits?	Make the secure path the easy path: defaults that do the right thing, workflows that prevent dangerous actions without thought, and escalation that is simpler than guessing.
b{wO[zY1&G	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should we measure progress on psychology‑aware security?	Track behavioral outcomes, not input counts: fewer high‑impact incidents per headcount, time‑to‑detect and time‑to‑contain, reduction in single‑click catastrophes, and user‑reported “caught myself” near‑misses.
ILJ,W>[.Xv	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	According to the chapter, why isn’t training alone enough?	According to Chapter 1 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, many failure modes (automation, emotional fallback, authority pressure) are features of how minds work; you can’t train them away, so systems must be engineered to work with—not against—human psychology.
ueQXcFDy1a	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What metaphor from the chapter best captures the goal of human‑aware controls?	According to Chapter 1 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, the stairwell fire‑gate: a small, well‑placed barrier that intercepts an automatic, panicked behavior and effortlessly redirects it toward safety without requiring instructions.
"nK8s|0#=rT"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Which design principles from the chapter should guide new controls?	According to Chapter 1 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner: 1) Affordances that teach correct mental models; 2) Irrational modes that recognize duress; 3) Rational centering to restore deliberation; 4) Error robustness (least privilege, separation, depth); 5) Failure robustness (detect and recover); 6) Manageable decisions that route hard choices to experts.
hMBNC/9Tn`	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is authentication in computer security?	Authentication is the process of verifying the identity of a user, process, or device, usually as a prerequisite to allowing access to resources within an information system.
zB>kf|+6i0	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How is authentication different from authorization?	Authentication determines who a user is, while authorization determines what that user is allowed to do once authenticated.
Incbr!@((N	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are the three primary elements of the AAA model?	The AAA model consists of Authentication, Authorization, and Accounting, each handling verification, permission, and tracking respectively.
O8b.]^.rI:	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is meant by identity in authentication systems?	In authentication systems, an identity is a unique string or set of symbols such as a username, email address, or ID number used to represent a principal within a system.
m|cEQ}{l*r	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Who or what can be a principal in an authentication system?	A principal can be any entity that can be uniquely identified in a system, such as a person, computer, process, or organization.
I56nc@BSvr	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are the three basic types of authentication proofs?	Authentication proofs fall into three categories: something you know (e.g., a password), something you have (e.g., a token), and something you are (e.g., a biometric trait).
"G7@#U6Se*c"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are false positives and false negatives in authentication?	A false positive occurs when an invalid identity claim is accepted, while a false negative occurs when a valid identity claim is rejected.
v^Mn=U-wSE	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the principle of Complete Mediation?	Complete Mediation is a security principle stating that every access to a resource must be checked for authorization, ensuring no uncontrolled access points.
s*T`9It7?A	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are the three core requirements for password-based authentication?	The three requirements are: (1) the password must be known only by the correct user, (2) it must be difficult to guess, and (3) it must not be forgotten.
isNAv][u,|	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are passwords considered a weak form of authentication?	Passwords are weak because they are often reused, easy to guess, stored insecurely, and vulnerable to social engineering, theft, and brute-force attacks.
u{C6ba@K9D	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why should passwords never be stored in plain text?	Storing passwords in plain text allows attackers who gain database access to immediately know users’ passwords, compromising all associated accounts.
d/(-ntt6_a	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a password hash?	A password hash is a one-way transformation of a password into a seemingly random string of data that cannot easily be reversed to reveal the original password.
h`]!~/;[[D	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a salt in password hashing?	A salt is a random value added to a password before hashing to ensure that identical passwords produce different hash values and to prevent precomputed attacks.
oF[<$K1qI5	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is it important to use salts when hashing passwords?	Salts prevent attackers from using precomputed hash dictionaries (rainbow tables) and ensure that even identical passwords yield unique hashes.
w@<aBr5$U	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a brute-force attack?	A brute-force attack involves systematically trying every possible combination of characters until the correct password is found.
l?TuvvgG?7	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a dictionary attack?	A dictionary attack uses a predefined list of common passwords or words to guess passwords, often with variations and substitutions.
FI8h<G1v58	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does password length affect password strength?	Password strength increases exponentially with length because each additional character multiplies the number of possible combinations, making brute-force attacks more difficult.
F>9WDsH<k	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does the expression 26^n represent in password analysis?	It represents the total number of possible password combinations using lowercase English letters, where n is the password length.
"KVgqdWR9@#"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are mixed character sets recommended for passwords?	Using uppercase letters, numbers, and symbols increases the number of possible combinations, drastically extending the time needed for brute-force attacks.
xxfl..6ik*	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a good password length for adequate security?	A password of at least 10 characters, using mixed symbols, provides significant resistance to brute-force attacks on modern hardware.
I;DgyP9V=@	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are hash algorithms like PBKDF2 preferred over MD5 for password storage?	PBKDF2 is designed to be computationally slow, making brute-force attacks much more time-consuming compared to fast algorithms like MD5.
s$0X.0Gm~W	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why should passwords not be reused across different systems?	Reusing passwords means that a breach on one system can compromise all others using the same credentials, increasing the scope of attack.
n[bV}A<P2D	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a password manager?	A password manager is software that securely stores multiple passwords in encrypted form, requiring only one master password for access.
"f#<=2{<&vG"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do password meters help improve security?	Password meters analyze user-entered passwords in real time and provide feedback or suggestions to encourage stronger password choices.
eZyn6,Qf5g	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is frequent password changing not always beneficial?	Frequent changes can lead users to choose weaker, easier-to-remember passwords, which may reduce overall security.
H3eVh:9^@>	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are password resets considered risky?	Password resets can be exploited by attackers using weak recovery questions, compromised email accounts, or social engineering.
rLx*Yi83/h	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can users improve password reset security?	Users should answer security questions with random strings stored in a password manager instead of truthful, guessable answers.
hDYc$t1|8O	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is something-you-have authentication?	Something-you-have authentication verifies identity based on possession of a physical or digital token, such as a security fob or smartphone.
HYc;`OPM15	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are the three key requirements for token-based authentication?	The token must be exclusively possessed by the valid user, must not be forgeable, and must use a secure protocol for verification.
rCPX8g-G@h	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does an RSA SecurID token work?	It generates time-based codes using a secret seed and synchronized clock, which are verified by an authentication server sharing the same seed.
qS&z-t!a,$	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are the vulnerabilities of token-based authentication?	Tokens can be stolen, seeds can be leaked, and authentication servers can be compromised, allowing attackers to generate valid codes.
Q_(&!Ii0uJ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are SMS codes considered weak for authentication?	SMS codes can be intercepted, redirected to email, or stolen through social engineering, making them insecure for sensitive authentication.
nJaDt6HdFZ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is something-you-are authentication?	Something-you-are authentication uses biometric characteristics such as fingerprints, facial recognition, or iris patterns to verify identity.
DUrk4WtqAd	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are the main requirements for biometrics to work effectively?	The biometric trait must be unique, measurable, stable, unforgeable, and provable through a secure protocol.
K0taR,SUsa	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are false accepts and false rejects in biometrics?	False accepts (FAR) occur when unauthorized users are accepted, and false rejects (FRR) occur when authorized users are denied access.
Q0aRRktSg6	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the receiver operating characteristic in biometrics?	It is the trade-off between false accept and false reject rates, showing how system sensitivity affects both types of errors.
hWL[Lg$pBJ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why can biometric systems never be completely accurate?	Because human features and sensor readings vary slightly each time, perfect matches are impossible, leading to inherent error rates.
z~Iqre:>Th	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why can biometric data breaches be more damaging than password leaks?	Unlike passwords, biometrics cannot be changed or revoked once stolen, creating permanent identity exposure risks.
m44$Qy-p75	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are social and ethical issues associated with biometric systems?	Biometric systems can introduce biases against certain groups, exclude individuals with unmeasurable traits, and raise privacy concerns.
"Q/S5hl`b^#"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is multifactor authentication (MFA)?	Multifactor authentication requires users to provide two or more independent proofs of identity from different authentication categories.
"E)(4P_Eyj#"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is MFA more secure than single-factor authentication?	MFA increases security by ensuring that even if one factor is compromised, others remain intact, making unauthorized access more difficult.
P[mxco_KdP	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the principle of defense in depth?	Defense in depth is a security design principle advocating multiple layers of defense so that compromising one layer does not expose the system entirely.
h&ne=eYoME	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is an example of MFA in everyday life?	An example is logging into an online account with a password (something you know) and confirming via a mobile app code (something you have).
"E#6onBNykU"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are common challenges when deploying MFA?	Challenges include balancing usability, handling lost tokens, integrating with legacy systems, and ensuring secure recovery methods.
iOuY}N]WU,	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is it important to plan for MFA failures?	Systems must allow for safe remediation when users lose devices or credentials without compromising overall security.
xhsVR]nbz,	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is no single authentication method perfect?	Each method has inherent weaknesses, such as memorability for passwords, theft for tokens, or error rates for biometrics, requiring context-specific solutions.
s:Yj*53V.;	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the most recommended approach to secure authentication?	Using multifactor authentication along with good password management and encryption provides the most balanced protection.
s%QRMp-,xq	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is authorization?	Authorization is the process of deciding what an authenticated principal is allowed to do within a system; it answers “what permissions does this principal have?” and is enforced by access controls after identity is established.
u6=mCU<$G`	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why must policy come before mechanism?	Because mechanism enforces goals; if you don’t first articulate the right protection goals, even excellent technology can secure the wrong things or protect the right things in the wrong way.
"xw#mS/biC/"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a security target?	A security target ties high‑level policy goals to concrete enforcement controls—documenting how specific mechanisms, processes, and configurations satisfy the stated policy.
gTN$+!iQzH	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does complexity affect authorization?	Growing features, integrations, and entry points multiply permissions and misconfiguration risk; complexity increases human error, creates edge cases, and expands the places attackers can exploit to bypass controls.
C~I%n.I44u	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the principle of least privilege?	It’s allocating each principal only the minimal permissions necessary to perform their tasks; this limits damage from mistakes, compromise, or insider abuse and usually implies fine‑grained permission design.
J1QP[UbvKb	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the Bell‑LaPadula (BLP) model in one sentence?	BLP enforces confidentiality by allowing no‑read‑up (subjects can’t read above their clearance) and no‑write‑down (subjects can’t write to lower classifications), plus optional discretionary controls.
F1ov@J{1sU	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is “no‑write‑down” necessary?	Without no‑write‑down, a subject who reads high‑classification information could leak it by writing to lower classifications; banning downward writes prevents accidental or malicious leakage.
xzE7;bia{h	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the “*-property” in BLP and why is it called that?	It’s the no‑write‑down rule; according to Chapter 3 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, its name stuck after someone wrote “*-property” on a board as a placeholder and the label endured.
o_;2[q]51N	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are mandatory vs discretionary access controls?	Mandatory access control (MAC) enforces policy globally regardless of user wishes (e.g., no‑read‑up/no‑write‑down); discretionary access control (DAC) lets object owners grant or restrict access (e.g., “need‑to‑know” sharing under user control).
tj-6xdJ&{c	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a “trusted computing base” (TCB)?	The TCB is the set of components (code, configuration, and sometimes people) that must work correctly for security to hold; minimizing TCB size reduces the attack surface and the chance of hidden bugs breaking security.
h[TbFz~ZO2	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are “trusted subjects” in BLP and why are they risky?	Trusted subjects are allowed to bypass some policy rules (e.g., to declassify/redact); they enlarge the TCB, invalidate model guarantees for their actions, and become high‑value targets and sources of policy exceptions.
O!]H%-IbiF	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the tranquility property?	Strong tranquility forbids changing labels during normal operation; weak tranquility allows changes only if they don’t violate policy (e.g., processes can raise to a level they need to read but never exceed their clearance).
kWf,OoLM)W	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Where does BLP struggle in practice?	It doesn’t specify declassification/redaction or initial labeling; in real systems this leads to many exceptions and “trusted” pathways that become focal points for attack and error.
cmq!mwpT`^	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does it mean that BLP can “work too well”?	Rigid one‑way flow (low→high) can overly compartmentalize data so creators lose visibility and systems become impractical without carefully engineered reclassification channels.
F23l>^!c;%	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the Biba model in one sentence?	Biba protects integrity (not secrecy) using no‑read‑down (don’t read less trusted data) and no‑write‑up (don’t contaminate more trusted data).
Ds-k:sYDh&	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does Biba allow reading “up” but not “down”? 	Because integrity is about preventing low‑trust inputs from corrupting high‑trust objects; reading up is safe for integrity, reading down is not.
Q7L/Im-km>	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How has Biba appeared in mainstream systems?	According to Chapter 3 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, Windows introduced integrity levels (Low/Medium/High) and adopted a no‑write‑up rule so low‑integrity content (e.g., browser downloads) can’t modify system files—though user‑granted exceptions weakened this in practice.
J@(}:+,0wL	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is Domain and Type Enforcement (DTE)?	DTE assigns each running program a domain and each object a type; tables map which domains may interact with which domains and what operations each domain may perform on each type, enabling fine‑grained, mandatory policy enforcement.
w$mn%Z_V|J	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does DTE reduce rule explosion?	Instead of per‑user/per‑object rules, DTE reasons at class level (domains and types); for 20 programs and 100 files, naive rules could be 20*100=2000 entries, but 3 domains * 10 types = 30 entries captures the same intent.
Qt_A@to;55	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is implicit typing in DTE?	Types can be applied to directories so contained files inherit the type; subdirectories can override, dramatically shrinking policy specification effort while keeping structure meaningful.
NQyIKqqMn)	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Can DTE constrain multi‑program workflows?	Yes; it can enforce “assured pipelines” so each program in a chain talks only to its immediate neighbors, limiting unauthorized data exfiltration during processing.
"gNO%y#!@h0"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Where do everyday users encounter DTE‑like enforcement?	According to Chapter 3 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, SELinux implements a DTE‑style policy and Android builds on SELinux, so Android phones enforce domain/type rules under the hood.
sdHSEs[e}^	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How would a simple DTE policy ensure only admins modify system executables?	Place system binaries under a type like Executable_Files; allow Admin_Domain write/execute, allow System_Domain read/execute but no write, and allow User_Domain execute only—login transitions users into Admin_Domain or User_Domain; result: only admins can modify executables while others can run but not change them.
G0?f>3Y(4p	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the main trade‑off with DTE?	Expressiveness vs. complexity: policies can capture nuanced, mandatory constraints, but real policies span thousands of low‑level rules that are hard to author, audit, and mentally validate without tooling.
qP;`|q7wCW	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is RBAC?	Role‑Based Access Control binds permissions to roles (job functions) instead of individuals; users assume one role at a time to access resources, enabling silos, least privilege, and separation of duties.
MDUQ!5Stj4	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is ARBAC?	Administrative RBAC governs who may create/modify roles and role assignments, formalizing safe, auditable change management for an RBAC system as people join, leave, or change jobs.
vErFw78dCi	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Give a simple RBAC hierarchy example.	A Doctor role inherits Healer and Intern permissions; Doctors can do everything Healers and Interns can, while Healers and Interns are restricted to their own scopes; users activate only the role needed for the task at hand.
o?q:r;uBGH	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What advantages does RBAC offer in organizations?	Easier onboarding/offboarding, clear separation of duties, compartmentalized risk (one compromised role doesn’t expose all data), and simpler reasoning in terms of business functions rather than individual accounts.
cWRqf{DKYe	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is ABAC in one sentence?	Attribute‑Based Access Control grants or denies requests based on attributes of subjects, objects, and environment (e.g., role, project, location, time), evaluated against policy rules.
$PVf30_2l	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Give two ABAC policy examples.	“Managers may view transactions in their branch; no one may approve above their limit.” and “Employees may edit records they own if in draft; managers may publish final records for their reports.”
dOTQH?pZV,	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do RBAC and ABAC compare?	RBAC is simpler and maps cleanly to job functions; ABAC is more expressive (adding context like location/time/project) but harder to author, test, and validate—choose based on needed nuance and governance maturity.
EzaI|kz-E8	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are common RBAC/ABAC pitfalls?	Role creep (users accumulate roles they no longer need), stale attributes, and data rot where model inputs diverge from real‑world org changes—undermining least privilege and inflating attack surface.
oFuPkW$me-	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is data quality a security issue?	Authorization logic is only as accurate as the org data (people, roles, projects, systems); if that data is stale or wrong, policies grant or deny the wrong access, inviting breaches or outages.
"OL5#p@%%zo"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are CRUD permissions?	Most permissions map to Create, Read, Update, Delete; even “execute” can be viewed as reading code and updating processor state; thinking in CRUD helps unify permission models across files, APIs, databases, and devices.
LDoZK]77k9	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do ACLs represent permissions?	An Access Control List is stored with each resource and lists which users (or groups) have which permissions—akin to a club bouncer’s list that controls who may enter and what areas they can access.
HXY4sN%A-2	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What do Linux rwxrwxrwx bits mean?	They are owner/group/world triplets for read (r), write (w), execute (x); e.g., rw-r----- means owner can read/write, group can read, everyone else has no access.
vXu06iv*bl	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Where do ACLs fit for MAC vs DAC?	Traditional OS ACLs are discretionary (owners edit permissions; admins can often override); under MAC, a mandatory policy constrains or overrides per‑object ACL choices to enforce global rules.
r/gR/Y8&BG	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What can’t ACLs do well?	Delegation: expressing “use my permission on my behalf for a time and only for X purpose” is clumsy or unavailable; central admins may also block owners from sharing as needed in tightly controlled systems.
zP%9hknz_L	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are capabilities?	Capabilities are unforgeable tokens that confer specific rights to resources; the holder presents the token to access, enabling natural delegation and least privilege without per‑resource ACL edits.
kitXPPvALV	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do you prevent capability forgery and misuse?	Cryptographically sign capabilities, bind them to the intended principal’s identity, and check signatures at use; stolen tokens won’t work if identity binding and freshness checks are enforced.
ja(qiEy3g	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do you revoke or limit capabilities?	Use proxies (route access via a revocable middle object), embed expiry times for automatic timeout, and allow constrained delegation where the original holder signs a wrapped, narrower right for a delegate.
b)7nfAzZ*G	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is application isolation?	Isolating apps from each other (and from the system) so they cannot read or tamper with one another’s files or processes; Android and modern Windows combine sandboxing with ACLs/capabilities to restrict inter‑app access to mediated channels.
wCNwDAXezi	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is complete mediation?	Every access by any subject to any object must be checked, every time, by a central enforcement point; skipping or caching decisions without revalidation invites bypasses and policy drift.
nTE[vmyA8}	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a reference monitor?	A reference monitor is the trusted component that enforces access checks (the embodiment of complete mediation); it must be tamper‑proof, always invoked, and small enough to analyze.
CI2?gz{7j%	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do app permission prompts often fail?	They interrupt users right before a reward (using the app), assume users understand risks, and lean on misplaced trust in app stores; users click “Allow,” defeating the intent of user‑driven authorization.
G_ptAP*f{V	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What design principle mitigates misconfiguration defaults?	Fail‑safe defaults: block by default and explicitly grant needed access; according to Chapter 3 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, a large cloud app platform shipped data endpoints publicly accessible by default until incidents forced a secure‑by‑default reversal.
I*7?j62$3O	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a side channel?	A side channel leaks information via unintended or indirect outputs (errors, timing, heat, LED blinking); even when policy rules are followed, these channels can reveal secrets.
LQa.OfyP:B	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Give a simple side‑channel example under BLP.	A low‑clearance subject can’t list names in a high‑level folder, but if creating “budget.docx” returns “name already exists,” the error discloses that the file exists—information flowed from high to low via the error.
K22+$]mMWN	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are passive vs active side channels?	Passive channels only require observation (e.g., timing variations); active channels require the attacker to perturb the system (e.g., sending inputs that force revealing errors or timings).
QT~%e:O+*T	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should vendors’ authorization claims be evaluated?	Map their features to well‑studied models (BLP, Biba, DTE, RBAC, ABAC), probe exception handling and TCB size, verify complete mediation, inspect default states, and assess data‑quality dependencies and governance for keeping policies accurate over time.
O:UYo[^El0	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is cryptography?	Cryptography is mathematics used to protect information so only authorized parties can use it; it underpins secure computing and communications by enabling confidentiality, integrity, and various kinds of authentication.
sIG|6zz:-f	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What do encryption and decryption do?	Encryption transforms readable data (plaintext) into unreadable data (ciphertext) using a key; decryption reverses that transformation with the appropriate key so the original data becomes readable again.
Erns$PNk@4	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a cipher and what are plaintext and ciphertext?	A cipher is a paired set of algorithms for encryption and decryption; plaintext is the original readable data, while ciphertext is the scrambled output that should look meaningless without the key.
r=r<@0CUD(	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why must a cipher’s key space be large?	A large key space thwarts brute-force attacks because an attacker cannot feasibly try every possible key before the data loses value; small key spaces make exhaustive search trivial.
"bH&2D`#%+e"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How many possible keys does a classic Caesar cipher have?	Using the English alphabet, there are 25 nontrivial shifts (26 if you count the no-op); this tiny key space makes the cipher easy to brute-force.
L:5*H2O(=>	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What principle says the algorithm itself shouldn’t be secret?	Kerckhoffs’s principle (often summarized as “the enemy knows the system”)—security should rely on the secrecy of keys, not the obscurity of designs; this generalizes to the principle of open design.
HuQ@((Be|N	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do monoalphabetic substitution ciphers fail against analysis?	Because they preserve letter patterns and frequencies: identical plaintext letters always map to identical ciphertext letters, leaking structure that enables frequency analysis and easy cryptanalysis.
NQpebuP<3-	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How large is the key space of a random monoalphabetic permutation over 26 letters?	25! possible keys (if no letter maps to itself is not required), which equals 15,511,210,043,330,985,984,000,000—huge, yet still breakable by pattern analysis because structure leaks from plaintext to ciphertext.
h~c2-PVa=c	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a block size and why does it matter?	Block size is how many symbols a cipher transforms at once; larger blocks mix more context per operation, hiding patterns better and making cryptanalysis harder (all else equal).
c;2%G+e|0c	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How is a Playfair cipher key table built?	Choose a keyword, drop duplicate letters, fill a 5×5 grid left-to-right and top-to-bottom with the keyword’s letters, then fill remaining squares with the unused letters (typically merging I/J to fit 25 cells).
"p6f4#DB/<z"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How are Playfair digraphs enciphered?	Split plaintext into pairs; for each pair: same row → take the letters to the immediate right (wrapping); same column → take letters immediately below (wrapping); rectangle → replace each with the letter in the same row at the rectangle’s opposite corner.
Cbr<wfd[.H	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What ciphertext results from enciphering “ATTACK AT TEN O’CLOCK” with keyword SECURITY under Playfair?	According to Chapter 4 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, the steps produce BYYBRGBYFTOPSNNUHZ after spacing/punctuation removal and padding.
zWE2s?BnQx	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a stream cipher (in contrast to a block cipher)?	A stream cipher transforms symbols one by one in sequence, with the transformation depending on position or a running keystream; the same plaintext symbol can encrypt differently at different positions.
tBR$-KyEqA	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does the Vigenère cipher work at a high level?	It repeats a keyword to the plaintext length and encrypts each letter using a Caesar shift determined by the corresponding keyword letter, producing a position-dependent stream of shifts.
f(rDO1jQU*	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What ciphertext results when encrypting “ATTACKATTENOCLOCK” with the keyword SECURITY using Vigenère?	According to Chapter 4 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, the computed ciphertext is SXVUTSTRLIPITTHAC.
ur$IxXTm)d	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why was Vigenère considered strong historically yet breakable later?	Because it defeats simple frequency analysis, but its repeating keyword leaks periodic structure; once the key length is found (e.g., by looking for repeated segments and spacings), the text splits into Caesar ciphers that can be cracked.
C[Zs/xb9yA	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is padding in the context of classical ciphers?	Padding adds extra characters so the plaintext fits the cipher’s input size constraints (e.g., making an odd-length message even for Playfair) and is removed after decryption.
LyVM4F,t%2	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is key expansion in simple terms?	It’s a method to derive a larger amount of keying material from a shorter key or keyword so an algorithm can fill its required internal structures (e.g., Playfair’s 25-letter table derived from a shorter keyword).
scVi4/a]_l	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do entity authentication and data-origin authentication differ?	Entity authentication proves an actor’s identity during a protocol run; data-origin authentication ties specific data to its claimed source and inherently implies integrity (if the data changes, the claim no longer validates).
z/Q:KMn@2o	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is cryptography needed even when trusted endpoints communicate over the Internet?	Because intermediate systems route, store, or forward traffic and may be malicious or compromised; cryptography allows endpoints to keep data confidential and authentic despite untrusted intermediaries (much like the prisoner–accomplice analogy in the chapter).
w6|DKa`0&2	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is XOR and why is it so useful in cryptography?	XOR (exclusive-or) outputs 1 when exactly one input bit is 1; across bitstrings, it’s its own inverse—(A xor B) xor B = A—so it can mix data with a keystream and perfectly recover it with the same keystream.
"x#x^LDZNQZ"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Can you show a small XOR example?	Yes: 11011011 xor 10110001 = 01101010, and 01101010 xor 11011011 = 10110001, demonstrating that applying the same mask twice restores the original.
GT4R8EbhmK	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a cryptographic hash function?	A function that maps inputs of arbitrary size to a fixed-size output (a “digest”) such that outputs look random, tiny input changes radically change the digest, and it’s computationally infeasible to reverse or find collisions.
niBw!+a;E3	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What core properties should a hash provide?	Compression (fixed-size output), preimage resistance (given a digest, infeasible to find an input producing it), and collision resistance (infeasible to find two different inputs with the same digest).
AUG5jzmjPr	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are hashes described as digital fingerprints?	Because a short digest can reliably identify very large data: recomputing the hash later and comparing lets you detect any change without storing or comparing the whole original.
vc1_=Q$hj/	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How big are common hash outputs?	Examples include 128-bit (16-byte) digests (e.g., MD5—now broken), 160-bit (20-byte) digests (e.g., SHA-1—broken; RIPEMD-160—still used), 256-bit (32-byte) and 512-bit (64-byte) digests (e.g., SHA-256/SHA-512—widely used).
tYM2A&wT9P	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are realistic work factors for brute force on hashes?	For a b-bit hash, generic preimage search needs about 2^b trials; generic collision search needs about 2^(b/2) trials (birthday bound), which is why modern hashes use large b.
jrdGI^P{Y	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How are hashes used to protect stored passwords?	Systems store the hash of a password (often with a salt and slow hashing) instead of the password itself; on login, they hash the submitted password and compare digests, minimizing harm if the database is stolen.
C/grD/3MMi	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is the amount of ciphertext relevant to evaluating a scheme’s strength?	Stronger schemes require more ciphertext before exploitable patterns emerge; weak schemes leak structure quickly (e.g., monoalphabetic ciphers), enabling effective cryptanalysis with small samples.
SM|;PI,91	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What’s the difference between symmetric and asymmetric cryptography?	Symmetric cryptography uses the same secret key for encryption and decryption; asymmetric cryptography uses a public/private key pair with distinct roles (details continue in the next chapter).
A..p`(~4>.	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does repeating a Vigenère keyword weaken security?	Repetition creates periodicity: letters at positions separated by the keyword length are enciphered with the same Caesar shift, enabling analysts to estimate the key length and split the problem into solvable subproblems.
oTt>TSc!:l	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should plaintext be prepared for Playfair before encryption?	Remove spaces/punctuation, handle repeat letters in a pair if needed (often by inserting a padding letter), and ensure the total length is even by padding the end if necessary.
"CmM*#%i@8^"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are bits, bytes, and their larger groupings?	A bit stores 0 or 1; 8 bits make a byte; 1 KB ≈ 1024 bytes, 1 MB ≈ 1024×1024 bytes, 1 GB ≈ 1024×1024×1024 bytes—common units for measuring data sizes.
mmqC,q^Gr3	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do binary and hexadecimal relate in practice?	Computers operate in binary, but hexadecimal (base 16) is a convenient shorthand: for example, 0b101 1100 1010 0011 0111 corresponds to 0x5 c a 3 7.
J0g$@yR(vJ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is block size two (as in Playfair) still insufficient by modern standards?	Because even digraph-based schemes leak structured relationships (e.g., repeated pairs) and do not achieve the diffusion/confusion modern block ciphers provide; larger, more complex transformations are necessary today.
v5YxM?t>b/	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does “key vs. algorithm” mean in security terms?	The algorithm is the public, standardized procedure; the key is the private, variable input that personalizes each use—security depends on keeping keys secret and strong, not on hiding algorithms.
NvC_YIpFxf	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do modern systems avoid relying solely on human memory for crypto secrets?	Human-chosen secrets are often low-entropy and reused; secure systems prefer randomly generated keys, password managers, and protocols that limit the damage if a secret is exposed.
"H6j#JM^3n]"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do cryptographic tools support integrity and origin without secrecy?	Mechanisms like hashes and message authentication codes (and, in asymmetric settings, digital signatures) detect unauthorized changes and bind data to a source even when data itself isn’t encrypted.
feB1?S&:T<	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What classical lesson carries over to modern design regarding operators?	Technology can be sound yet fail in practice due to human mistakes; clear procedures, training, and fail-safe defaults are critical to avoid undermining cryptographic protections (a theme reinforced by the chapter’s anecdotes).
jB(+L)fzp@	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is repeating plaintext structure dangerous for simple ciphers?	Because repetition in plaintext (e.g., “ATTACK” patterns) produces repetition in ciphertext under weak schemes, creating footholds for attackers to infer keys or mappings.
wt|<Yek{Rd	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do you recognize when to reference the book in answers like these?	Use citations such as “According to Chapter 4 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner,” when the answer depends on the chapter’s specific examples, computations, or narratives rather than on widely known definitions.
"zTY2<)#rMV"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the high-level model for evaluating a cipher’s safety from this chapter?	Ask: Is the key space large enough to defeat brute force? Does the construction avoid leaking patterns with too-small blocks or repetition? Do the math operations (e.g., XOR) enable reversible mixing only with the correct key? Are integrity and origin addressed where needed?
r3Zv?M`8ew	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is symmetric encryption?	Symmetric encryption is a cryptographic approach where the same secret key is used to transform plaintext into ciphertext and to recover the plaintext from that ciphertext; common modern examples include block ciphers such as AES and stream constructions that generate a keystream and XOR it with data.
nY6}pxB.*9	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does a modern block cipher differ from historical ciphers?	A modern block cipher operates on fixed-size bit blocks (e.g., 128 bits) using rounds of substitution–permutation controlled by a key, providing a vast key space (e.g., 2^128) and resistance to known cryptanalysis, unlike historical monoalphabetic or digraph ciphers with tiny key spaces and visible letter patterns.
"xv(^8#jmDc"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the typical block size and key size for AES?	AES has a fixed 128-bit block size and supports 128-bit, 192-bit, and 256-bit keys, commonly referred to as AES-128, AES-192, and AES-256.
F_ybP-Zc+1	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are modes of operation needed for block ciphers?	Modes of operation are required because a raw block cipher only transforms one fixed-size block; modes define how to securely encrypt multi-block messages and how to handle partial blocks, randomness, and integrity, preventing pattern leakage and enabling properties like confidentiality and authenticity.
Dn2.]nmMMp	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are common secure modes for AES and when should they be used?	Authenticated Encryption with Associated Data (AEAD) modes such as GCM (Galois/Counter Mode) and ChaCha20-Poly1305 should be preferred because they provide confidentiality and integrity together; CTR and CBC provide confidentiality only and must be combined with a separate MAC to prevent message forgeries.
x[7+kQ1&R(	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is IV/nonce selection critical?	An IV/nonce must be unique for each encryption under the same key; reusing a nonce with CTR-mode or GCM leaks keystream relationships and can fully compromise confidentiality and integrity, so systems must ensure uniqueness (e.g., random 96-bit nonces in GCM or counters that never repeat).
ioX@H[luzz	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is padding and how can it go wrong?	Padding fills the last partial block in block modes like CBC; if a system reveals details about padding validity, an attacker can mount a padding oracle attack that decrypts data without the key, so implementations should use AEAD or constant-time, uniform error handling.
sE^7]Viv~Z	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does “encrypt-then-MAC” mean and why is it preferred over “MAC-then-encrypt”?	Encrypt-then-MAC computes a MAC over the ciphertext (and associated data) and is generally safer because verification occurs before decryption, preventing malleability and oracle leaks; many AEAD schemes can be viewed as carefully engineered encrypt-then-MAC designs.
qjQ6`yY9BP	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a Message Authentication Code (MAC)?	A MAC is a symmetric primitive that verifies data integrity and authenticity using a shared secret key; HMAC is widely used and built on hash functions to produce a tag that changes if the message changes, ensuring tampering is detected.
gc0CEIu$w&	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does HMAC resist weaknesses in the underlying hash?	HMAC wraps the hash in a keyed, two-pass construction with inner/outer pads, making its security depend less directly on collision resistance and more on the PRF-like behavior of the compression function, which is why HMAC-SHA-256 remains strong even though earlier hashes like MD5 are broken for collisions.
FSV]/AcJ~0	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is randomness (entropy) so important in cryptography?	High-quality randomness seeds keys, IVs, nonces, and salts; poor entropy can render strong algorithms useless by making keys guessable or causing nonce reuse, so systems rely on cryptographically secure random number generators (CSPRNGs) that gather unpredictable events and stretch them securely.
wki=<wzSFo	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is key derivation and when is it needed?	Key derivation condenses or expands input keying material into one or more strong keys using a KDF such as HKDF; it is used to turn a shared secret (e.g., from Diffie–Hellman) into independent keys for encryption, integrity, and other purposes, each with defined context separation.
kd%qb@%%0;	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should passwords be transformed into keys safely?	Passwords should never be used directly as keys; instead, apply memory-hard, salted password hashing/derivation such as Argon2id, scrypt, or at minimum PBKDF2 with a high iteration count so that offline guessing is slowed dramatically and each user has a unique salt.
K$A&[S_cLz	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the core idea of public-key (asymmetric) cryptography?	Public-key cryptography uses a mathematically linked key pair: a public key that can be shared and a private key kept secret; operations like encryption or signature verification use the public key while decryption or signature creation use the private key, enabling secure communication without pre-shared secrets.
Njv9Mh>Fbe	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does RSA encryption and signing work at a high level?	RSA’s core operation is modular exponentiation: c = m^e mod n for encryption/verification and m = c^d mod n for decryption/signing, where n = p*q is a product of large primes and e,d are exponents; secure use requires padding schemes like OAEP for encryption and PSS for signatures to prevent structural attacks.
I.}W$,8W[R	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is Diffie–Hellman key exchange?	Diffie–Hellman lets two parties agree on a shared secret over an open channel using exponentiation in a finite group, e.g., A sends g^a mod p, B sends g^b mod p, and both compute (g^b)^a = (g^a)^b = g^{ab} mod p; the shared secret then feeds a KDF to derive session keys.
"PT%6B-Hbf#"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does elliptic-curve cryptography (ECC) compare to RSA?	ECC provides similar security with much smaller keys and faster operations for key agreement and signatures (e.g., ECDH and ECDSA/EdDSA); smaller keys reduce bandwidth and storage, and modern curves like Curve25519 and Ed25519 aim for safer, easier-to-implement choices.
h+h@]yrkc2	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is forward secrecy and why does it matter?	Forward secrecy (FS) ensures that compromising a long-term private key does not reveal past session keys; ephemeral Diffie–Hellman (DHE/ECDHE) generates fresh per-session secrets, so recorded ciphertext remains safe even if a server’s certificate key is stolen later.
t>)]*B<7)s	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a digital signature and how does it differ from a MAC?	A digital signature (e.g., RSA-PSS, ECDSA, Ed25519) proves integrity and origin publicly verifiable with a signer’s public key, enabling non-repudiation; a MAC proves integrity and origin only to parties sharing the secret, offering no public verifiability.
"l63pF)G#;N"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do certificates and PKI help you trust public keys?	A certificate binds an identity to a public key via a signature from a trusted Certificate Authority (CA); clients validate chains from the leaf certificate to a root in their trust store and check validity period, revocation (CRL/OCSP), and name matching before trusting the key.
n</VO8qq&.	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are common pitfalls in certificate validation?	Accepting any certificate without hostname verification, ignoring expiration or revocation, trusting unknown CAs, or disabling verification in development and forgetting to re-enable later are all dangerous anti-patterns that enable man-in-the-middle attacks.
"M6e8tk@#+8"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What problem does TLS solve and how at a high level?	TLS provides confidentiality, integrity, and peer authentication for network connections by negotiating cipher suites, performing a key exchange (ideally with forward secrecy), authenticating the server with a certificate, deriving traffic keys via a KDF, and protecting data using AEAD record encryption.
GloTFIiTl(	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why should systems use AEAD ciphers in TLS and APIs?	AEAD ciphers reduce design errors by bundling encryption and integrity with a single nonce-based interface, simplifying correct use and preventing common flaws like MAC-then-encrypt or unauthenticated CTR-mode deployments.
B4XQI>N5-H	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the difference between a stream cipher and CTR mode?	A native stream cipher (e.g., ChaCha20) directly produces a keystream from a key and nonce; CTR mode turns a block cipher into a keystream generator by encrypting sequential counters under a key and nonce—both require unique nonces and must authenticate ciphertexts.
jucn8*!hB1	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does authenticated data (AAD) work in AEAD?	AEAD lets you bind unencrypted metadata (e.g., headers) into the integrity check; if AAD changes en route, tag verification fails even though the metadata was not encrypted, preventing cut-and-paste and context confusion.
BB;B$Y_/i_	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should keys be stored at rest?	Keys should be stored only in protected memory and at rest inside dedicated hardware (TPM, HSM, secure enclaves) or encrypted with a master key that itself lives in hardware; applications should limit exposure, use least privilege, and routinely rotate and audit keys.
D~zv3kdTcw	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is key rotation and what benefits does it bring?	Key rotation replaces active keys with fresh ones on a schedule or after events; it limits blast radius if a key is compromised, enables cryptographic agility, and supports best practices like changing data-encryption keys while keeping a stable key-encryption key in hardware.
w?~-.ZK^WX	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can data be shared without sharing a single master secret?	Techniques like envelope encryption encrypt data with a data key (DEK) and then encrypt the DEK to each recipient’s public key; threshold schemes (e.g., Shamir secret sharing) can split control so that any t of n shares can reconstruct a key while fewer learn nothing.
d%kkxUsA<j	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are side‑channel attacks in modern cryptography?	Side‑channels exploit physical or timing leakages—such as timing differences, power use, cache behavior, or EM emissions—to recover secrets even when the math is sound; countermeasures include constant‑time code, blinding, masking, and avoiding data‑dependent memory access.
lKus[uQ,b~	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is constant‑time coding important?	If runtime varies with secret data (e.g., early exit on first differing byte), attackers can infer secrets by measuring time remotely or locally; constant‑time implementations ensure the operation count and memory access pattern do not depend on secret bits.
D+;{UUzJ??	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a salt and how does it differ from a nonce?	A salt is a non‑secret random value mixed into hashing/derivation to make outputs unique across users (e.g., password hashing) and can repeat safely; a nonce is a number used once that must be unique per key for encryption modes, where reuse can catastrophically break security.
fGZ|^sh0V&	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is cryptographic agility and why is it necessary?	Agility is the ability to swap algorithms, parameters, and keys without redesigning a system; it is necessary because primitives age, attacks improve, and regulatory or interoperability requirements change, so protocols should negotiate and systems should version their formats.
nd75:QMfzY	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does quantum computing impact today’s algorithms?	Large fault‑tolerant quantum computers would break factoring and discrete‑log assumptions (threatening RSA, DH, ECDH, ECDSA) via Shor’s algorithm and quadratically speed key search via Grover’s algorithm; symmetric schemes survive with larger keys, while public‑key systems need post‑quantum replacements.
N=XTRvv5:;	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is post‑quantum cryptography (PQC) in practice?	PQC refers to public‑key algorithms designed to resist quantum attacks, often lattice‑based for KEMs and signatures; migration strategies include hybrid key exchanges (classical + PQC) to maintain security now while preparing for future quantum adversaries.
x|)K!|7TNb	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	When should you choose RSA vs ECC vs EdDSA vs ChaCha20‑Poly1305?	Use ECC/EdDSA for compact, fast signatures and ECDH for key exchange where supported; use RSA primarily for compatibility with legacy systems; choose ChaCha20‑Poly1305 for high performance on software‑only or mobile devices and AES‑GCM when hardware AES is available and nonces are managed safely.
DZizj_`*&%	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are good defaults for application‑level encryption?	Some good defaults are AEAD (AES‑GCM or ChaCha20‑Poly1305), 96‑bit unique nonces, 256‑bit keys for long‑term safety, HKDF for key derivation, HMAC‑SHA‑256 for non‑AEAD integrity, and Argon2id for password hashing, while enforcing constant‑time operations and secure random generation.
Qj{1s-E;tk	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do you protect backups and archives cryptographically?	Encrypt data with a DEK and protect that DEK with a KEK stored in hardware (HSM/KMS), authenticate archives with AEAD or detached signatures, rotate keys on a schedule, store salts, nonces, and versioning alongside the ciphertext, and verify integrity during restore drills.
jBAPC2ymev	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the difference between integrity and authenticity in practice?	Integrity means the data was not modified; authenticity means the data came from who you think it did; a MAC provides both to holders of the secret, while a digital signature provides both to anyone who trusts the public key–identity binding.
p?bfAK6Z2+	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does “associated data” help prevent replay or misbinding?	By including session IDs, sequence numbers, protocol versions, and context in AEAD’s AAD or in the data covered by HMAC/signatures, you bind ciphertexts to a particular session and use, stopping replays and cross‑protocol or cross‑context attacks that reuse valid ciphertext out of place.
lfeyxMgW>B	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a KMS and why use one?	A Key Management Service centralizes key creation, storage, usage policy, access control, rotation, and auditing; using a KMS reduces secret sprawl, standardizes cryptographic operations, and provides tamper‑evident logs for compliance and incident response.
iSxyNNgI/h	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why should developers avoid building their own crypto?	Designing primitives or protocols is notoriously error‑prone—subtle mistakes in nonce handling, padding, ordering, or randomness can break security—so developers should use vetted libraries, safe high‑level APIs, and well‑studied protocols rather than bespoke designs.
cyg~2/5*OX	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do you evaluate whether a cryptographic design is fit for purpose?	Some basic steps to evaluate a cryptographic design are to define the threat model and security goals explicitly, choose primitives with conservative margins, ensure misuse resistance (e.g., AEAD), design for key management and rotation, specify error handling and side‑channel mitigations, enable cryptographic agility, and plan for testing, code audit, and incident response.
re+Hp.w`,k	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does integrity‑only protection fit into a system that already uses TLS?	Integrity‑only protections like HMAC over messages can be valuable end‑to‑end when intermediaries terminate TLS (e.g., load balancers) or when data is stored and later verified; they ensure tamper evidence even outside the channel’s lifetime and trust boundary.
i%15HfV0Oy	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are common signs that a crypto API is safe to use?	Strong signs include defaulting to AEAD with random nonces generated internally, versioned ciphertext formats that encode algorithm IDs and nonces, constant‑time operations, a KDF‑based key schedule, misuse‑resistance warnings, and comprehensive documentation with examples and foot‑guns called out.
B[F?j=D1f	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can you safely migrate encrypted data to a new algorithm?	A practical approach is to wrap old ciphertexts with a versioned envelope indicating the old scheme, decrypt and re‑encrypt opportunistically on read, support parallel decryption during a transition window, rotate keys, and track coverage metrics until legacy support can be removed.
"Oc4vog0H^#"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the relationship between hashing and signatures in practice?	Signatures are computed over message hashes rather than full messages for efficiency and to standardize domain separation; changing any bit of the message changes the hash and invalidates the signature, while the public key verifies that the signer’s private key produced that signature.
v}]!7/RXS/	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do counters and nonces interact in CTR‑like designs?	A nonce selects a keystream and a counter indexes blocks within it; the pair (nonce, counter) must never repeat under the same key, so systems must either use random nonces with large spaces and careful tracking or structured nonces with monotonic counters to guarantee uniqueness.
JI]zr>wx+a	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is context‑binding (domain separation) so often emphasized?	Context‑binding ensures keys and tags cannot be misused across different purposes; using separate keys (or labels/info strings in HKDF) for encryption vs MAC vs key wrap prevents cross‑protocol attacks and simplifies audits by making intended usage explicit.
prBH&GEm*i	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should you think about security levels like “128‑bit security”?	A rule of thumb is that a primitive offering k‑bit security would take roughly 2^k work to break with the best known attack; for symmetric crypto, 128‑bit security is generally sufficient for decades, while for public‑key systems you match parameters to standards that target similar effective security.
nr+)rEh;8H	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What problem does a man-in-the-middle (MITM) attacker create?	A man-in-the-middle attacker can secretly read, modify, or inject messages between two parties without either side realizing it, so any secure system must prevent eavesdropping, tampering, and impersonation on that path.
h%w=bB[&Me	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can a MITM exist even for data at rest?	If a device is stolen or handled by an untrusted party between the time you store data and later read it, that party becomes “in the middle” between you-now and you-later and could read or alter data unless cryptographic protections are used.
kiR9m3{z6n	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What three high-level protections should a cryptographic system provide?	Confidentiality (only authorized readers can understand data), integrity (unauthorized modifications are detectable), and authenticity (the publisher or peer is verifiably the one you intend to talk to).
rUaD(sLJA,	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is symmetric encryption preferred for bulk data?	Symmetric algorithms like AES and ChaCha20 are fast and designed to process large volumes; asymmetric primitives are slower and intended for small data (e.g., keys, signatures), so systems usually mix them: asymmetric to set up keys, symmetric to protect the stream or files.
"hZjSz9#&]."	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are session keys commonly used for data in motion?	Using a fresh session key per connection limits damage if a key is exposed, enables forward secrecy, and avoids unsafe key reuse across unrelated conversations.
gopYVPk2t5	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What must two parties agree on to encrypt/decrypt symmetrically?	They must agree on the cipher (e.g., AES or ChaCha20), the mode of operation (e.g., GCM, CBC, CTR), the mode parameters (e.g., IV or nonce), and the key; mismatches break decryption.
pV~_1SIKmN	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why must IVs/nonces be unpredictable or at least unique?	Predictable or reused IVs/nonces can let attackers infer relationships between ciphertexts or even recover plaintext/keys; unique, unpredictable values prevent dangerous key/IV pair reuse.
K*3@S@ilVL	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How is integrity typically provided for bulk data?	With a Message Authentication Code (MAC) such as HMAC, or by using an AEAD mode (e.g., AES-GCM/CCM, ChaCha20-Poly1305) that encrypts and authenticates in one operation.
wNclo9,^3b	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does “authenticate then encrypt” vs “encrypt then MAC” vs AEAD mean?	They are composition patterns. In practice, modern systems prefer AEAD, which computes confidentiality and integrity together, avoiding many pitfalls of ad‑hoc ordering.
JdSjcRTB}%	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does authenticity differ from integrity?	Integrity ensures data wasn’t altered undetectably; authenticity ties the protected data to a specific publisher or peer identity (often via digital signatures or certificates). Authenticity implies integrity, but not vice versa.
tQi:0<n|,0	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why can’t a shared MAC key prove which of several key holders sent a message?	Any holder could have generated the MAC, so you can’t disambiguate the sender; asymmetric signatures solve this by binding a message to one private key holder.
r*%t6i@Mj}	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the core goal of TLS?	TLS provides a secure authenticated channel (end‑to‑end confidentiality, integrity, and server authenticity) for application data over an otherwise insecure network.
A@,s4|yDGE	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Where does TLS sit in the network stack?	TLS runs above TCP and below the application protocol (e.g., HTTP); HTTPS is simply HTTP carried over TLS.
xj.IyioG}Q	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How is a TLS record protected during normal data transfer?	The sender forms a record from plaintext and metadata, authenticates it (MAC or AEAD tag), and encrypts it with a symmetric session key and per-record IV/nonce; the receiver decrypts and verifies the tag before delivering plaintext.
oy+1RrX3t}	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What happens if an attacker flips bits in a TLS ciphertext?	Decryption yields data with an invalid tag/MAC, so verification fails and the record is discarded; the attacker cannot forge a valid tag without the key.
B2)p_q8G?8	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Where do TLS record keys come from?	They’re derived during the TLS handshake via a key agreement (e.g., Diffie‑Hellman), then expanded into separate traffic keys (e.g., encrypt and MAC keys) for each direction.
B3`<z8RH:>	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are the main phases of a TLS 1.2 handshake?	ClientHello → ServerHello (+ Certificate, ServerKeyExchange, ServerHelloDone) → ClientKeyExchange → ChangeCipherSpec/Finished (client) → ChangeCipherSpec/Finished (server); after this, both sides use derived session keys.
"vnam*#cEs<"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is the server’s Diffie‑Hellman share signed in TLS 1.2?	Signing the server’s DH parameters with its private key prevents a MITM from swapping in malicious DH values; the client verifies the signature using the public key from the server’s certificate.
PI>18{J*.o	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is TLS typically one‑sided authentication on the web?	Browsers need to verify the server before sending secrets; client identity is usually proven later at the application layer (password, MFA, tokens). Mutual TLS exists, but is less common on public websites.
Jc88q~f@T7	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a certificate in PKI terms?	A certificate binds a subject’s identity to its public key and is signed by an issuer (a Certificate Authority or intermediate) so others can verify that binding.
jM%kU/_Myb	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Which X.509 fields matter most for web validation?	Subject name (or Subject Alternative Name) must match the URL, Validity period must include “now,” Serial Number is checked for revocation, Issuer identifies who signed it, and the embedded Subject Public Key is used for TLS operations.
PO=M<NnKk:	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does a browser validate a presented website certificate?	It checks the hostname match, validity dates, revocation status, and builds a signature chain from the site’s certificate through intermediates to a trusted root certificate in its store; every signature in the chain must verify.
u5cE`%+f[N	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is trusting the Issuer’s public key safe?	Roots are pre‑installed (OS or browser trust store) through out‑of‑band vetting; verification walks the chain from the site cert to a root already trusted locally.
qYmlHG5-MQ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What goes wrong if any certificate in the chain is forged or compromised?	Hostname binding and DH signature validation can be tricked, letting a MITM terminate TLS and impersonate the site. Consequently, every downstream security property collapses.
kLH+u0H0[b	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is certificate pinning and when is it useful?	Pinning hard‑codes an expected certificate or public key for a given service (e.g., in an app or browser build) so only that identity is accepted; it’s useful for high‑value endpoints but brittle for the open web.
cN{Jk})HXC	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is Certificate Transparency (CT)?	CT is a set of public, append‑only, verifiable logs where issued certificates must be recorded; clients can require CT proofs, and domain owners can monitor logs to detect mis‑issuance quickly.
MVYXTDp2JN	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does CT help during a CA compromise?	A forged certificate must appear in a public log to be accepted by modern clients; domain owners detect it by monitoring logs and can respond (revoke, block, investigate) with audit evidence.
s?k&,t8{ap	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the core difference between TLS 1.2 and 1.3 handshakes?	TLS 1.3 streamlines the exchange (fewer round‑trips), mandates forward‑secret ephemeral key exchanges, and uses AEAD only; this improves performance and security.
z{_kf5O7Tz	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why must a cryptographic system also address key lifecycle?	Keys must be generated, distributed, rotated, stored, archived, and destroyed safely; weak key management undermines even perfect algorithms.
A8I*chzMmd	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does IEEE 1619.1 model storage data for encryption?	It treats host data as host records, splits them into plaintext records, encrypts each to a same‑size ciphertext record, and packages ciphertext + metadata + auth tag as encrypted records.
kEI&/jc8V9	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does IEEE 1619.1 allow “length expansion”?	Encrypted records include authentication tags, IVs, and AAD/metadata, so ciphertext packages may be larger than plaintext; the standard assumes storage can accommodate this overhead.
iRbL(}wK@a	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Which encryption modes does IEEE 1619.1 support?	AES‑GCM and AES‑CCM (both AEAD), plus AES‑CBC and AES‑XTS combined with HMAC for integrity; implementations can choose among them to fit performance and platform constraints.
w%4ty4X{E!	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does the standard forbid writing plaintext or raw keys to the medium?	Storing plaintext or unwrapped keys defeats confidentiality; keys must be protected (e.g., wrapped by a KEK) and plaintext should never be recoverable from the storage surface.
Hfjx%7ztKK	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a KEK and why is it used?	A Key Encrypting Key wraps (encrypts) per‑record data‑encryption keys so they can be stored or transmitted safely. Unwrapping requires access to the KEK, enforcing layered protection.
BTP16`Naiz	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What roles do the “cryptographic unit” and “key manager” play?	The cryptographic unit encrypts/decrypts records and may generate per‑record keys; the key manager handles key lifecycle (provision, archive, rotation, destruction) and provides KEKs or data keys as needed.
ocd))EhYEX	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why must a key be bound to a single cipher/mode in 1619.1?	Using the same key across different modes leaks structural clues and can break security; the standard requires one key per mode to avoid cross‑protocol/key‑reuse pitfalls.
zCMznT8[9|	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is an IV collision and why is it dangerous?	An IV collision is reusing the same (key, IV) pair to encrypt different plaintexts. In many modes (e.g., GCM/CTR), collisions can reveal relationships or even allow plaintext/key recovery.
"v:#49oNGdS"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can implementations avoid IV collisions in storage encryption?	Use securely random IVs per encryption or generate a fresh random data key per record; both approaches ensure each (key, IV) pair is unique across all encryptions.
dz|v@rOld<	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What went wrong in a real‑world IV‑reuse incident?	Allowing untrusted code to choose IVs while reusing a single key led to exploitable AES‑GCM IV reuse on millions of devices; the lesson is to keep IV generation inside the trusted boundary and enforce uniqueness.
B3.aN/{D`t	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How are AAD fields used in 1619.1?	Additional Authenticated Data carries unencrypted metadata (e.g., record identifiers, offsets, versioning) that must be tamper‑proof; AEAD (or HMAC) authenticates AAD alongside ciphertext.
zR^>D|ev4O	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is re‑encrypting an entire file on small edits impractical?	Whole‑file re‑encryption is too slow for frequently updated large files; per‑record encryption lets the system update just the affected chunks while keeping integrity and confidentiality local.
lxQ.Np9Zkk	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does decryption work for an encrypted record?	Load the IV and AAD (or reconstruct them), unwrap the per‑record key if needed, decrypt the ciphertext record, and verify the tag/MAC; only on successful verification is plaintext returned to the host.
zS;@TD~s$m	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does the standard discourage password‑derived keys as the sole protection?	Passwords are vulnerable to offline dictionary attacks if an attacker gets wrapped keys; better designs mix strong KEKs, hardware protection (e.g., HSM/TPM), rate‑limiting, and/or multi‑party controls.
m;dV|j>iz(	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are safe practices if a password must protect storage keys?	Use a slow, memory‑hard KDF (e.g., high‑cost PBKDF2/scrypt/Argon2), enforce long, random passphrases, add salt, and consider splitting trust (e.g., device‑bound secrets + user secret).
jfxxVw]|Uv	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is long‑term key recoverability a risk factor?	Over time, people forget passwords, staff turns over, or biometrics become unavailable; without a recovery design (escrow, multi‑admin unlock, sealed backups), encrypted archives can become unrecoverable.
G_<J6@Z6Bj	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does “key expansion” mean in these systems?	A KDF deterministically derives many distinct keys (e.g., encrypt, MAC, IV derivation, client/server directions) from a single shared secret so keys don’t overlap in purpose or reuse bits.
gaB|s4lav9	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does TLS prevent a MITM during key agreement?	It authenticates the server’s ephemeral key share via a signature tied to a validated certificate; a MITM can’t forge that signature without the private key corresponding to the certificate’s public key.
qtobN&S]%H	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is hostname matching essential in certificate checks?	It binds “who you intended to reach” (URL) to the public key you’re about to trust; a mismatch is a red flag the certificate is for some other identity and should be rejected.
n*T!n4~.W(	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are common browser errors tied to certificate validation failures?	Hostname mismatch, expired/not‑yet‑valid certificate, and revoked certificate each produce blocking errors and prevent the page from loading unless the user bypasses (which is unsafe).
xIaMs$.I=/	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the risk model if a CA is compromised?	A compromised CA can mint valid chains for any domain, enabling stealth MITM until detection; this is why CT, auditing, and swift root distrust are critical responses.
E4Yc2{2YKo	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do session keys relate to forward secrecy?	When sessions use ephemeral key exchange (e.g., ECDHE), compromising long‑term keys later doesn’t reveal past session traffic because each session’s key was freshly derived and then discarded.
Pv(,p?~/@e	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is mutual TLS and where is it used?	Mutual TLS validates both server and client certificates, providing strong two‑way authentication; it’s common in service‑to‑service APIs, B2B links, and high‑assurance enterprise networks.
"u#y:M;eiDJ"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does a MAC/tag “prove” authenticity in record protection?	Only a party with the shared secret (MAC key or AEAD traffic key) can produce a valid tag over the exact ciphertext/AAD; verification confirms the sender possessed the right key and that data wasn’t altered.
QR@pPoZ}p,	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does 1619.1 allow storing wrapped per‑record keys alongside ciphertext?	It lets the decryptor recover the exact key used for that record later, avoiding global key reuse and supporting per‑chunk rotation without costly re‑encryption of unrelated chunks.
cJ{.@4vny;	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What storage overhead should you expect from authenticated encryption?	At minimum, an IV/nonce (e.g., 12–16 bytes) and an auth tag (e.g., 16 bytes) per record, plus any AAD and alignment/padding; designs choose record sizes to balance overhead vs. update granularity.
L79p4QS/_5	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why should one key not encrypt “too much” data in AEAD modes?	Modes like GCM have usage limits; for example, exceeding roughly 2^32 random nonces or very large total ciphertext volumes per key increases the probability of failure or exploitable tag collisions, so systems rotate keys before limits.
imXaBYTJk%	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do AEAD modes simplify protocol design?	They combine encryption and integrity in one API, reducing composition errors (like MAC‑then‑encrypt pitfalls) and ensuring tags always bind the right bytes (ciphertext + AAD) to the nonce/key.
Ej%w_;37aT	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is “additional data” in AEAD and why include it?	AAD is context you must authenticate but needn’t hide (e.g., record indices, protocol headers); authenticating it prevents attackers from splicing or reordering records without detection.
"l#e?{cYL,^"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does TLS 1.2 handle MAC with CBC vs AEAD ciphers?	CBC ciphersuites use MAC‑then‑encrypt with per‑record IVs; AEAD ciphersuites (e.g., AES‑GCM) compute a tag over ciphertext and AAD and encrypt in one step; the handshake negotiates which to use.
o{]7[}dzcF	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do browsers and OSes ship with many root CAs preinstalled?	It enables out‑of‑the‑box trust for the global web PKI; any site whose chain terminates at one of those roots can be validated without manual key distribution.
KHz,E5g^L4	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What’s a practical benefit of CT for site operators?	Automated monitors can alert when any certificate is issued for their domains—legitimate or not—so they can detect mis‑issuance or attacker‑requested certs quickly and respond.
D<TJk^z9K^	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does a storage system reconstruct IV/AAD “from context”?	If record numbering, offsets, or version counters deterministically define IV/AAD, the system can recompute them during decryption instead of storing them, saving space while preserving uniqueness/authenticity.
"I>A8#0=bTm"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is per‑record granularity valuable for large mutable files?	It localizes crypto work to edited regions, enabling fast updates and integrity for just the changed blocks while leaving untouched blocks alone.
iwOaLIq939	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can a system safely rotate KEKs without rewriting data records?	By re‑wrapping the stored per‑record keys under a new KEK (decrypt with old KEK, encrypt with new KEK), you rotate protection of keys without re‑encrypting the data they guard.
nQ!.f;wd?+	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What happens if a password‑protected archive’s user forgets the passphrase?	Without a recovery mechanism, data is irretrievable; robust systems plan for escrow, split‑knowledge recovery (e.g., M‑of‑N admins), or hardware‑sealed backups to balance availability and security.
"kvAPPO%R#I"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is “never share your private key” a hard rule in PKI?	Anyone holding your private key can impersonate you, sign malicious data, or mint rogue certs (if misused by a CA); keeping private keys private is foundational to authenticity.
enyTQ&9Xk>	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does TLS indicate the switch from setup to protected data?	Each side sends a ChangeCipherSpec followed by a Finished message protected by the newly derived keys; receipt and verification confirm both parties computed the same secrets.
P;8&V!U2Gt	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What if the certificate’s Common Name doesn’t match the URL but a SAN does?	Modern validation prioritizes the Subject Alternative Name extension; if a SAN lists the URL (or a wildcard that covers it), the certificate can still be valid even if CN differs.
"AEI3u#A,mf"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do browsers treat expired or revoked certificates?	They block the connection with errors; users may be able to bypass in some browsers, but doing so defeats the trust model and invites MITM risk.
u)F]|oqJy1	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the MITM risk on open Wi‑Fi without TLS?	Attackers can sniff plaintext, inject responses faster than the real site, and trick clients into fake logins or malware; TLS is what prevents this by encrypting and authenticating traffic end‑to‑end.
xq4K+0q%3Q	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does integrity protect against silent corruption in storage?	Authenticators (tags/MACs) fail verification if bits change—whether due to malicious edits or media errors—so the system can detect and refuse corrupted records.
A_rInOPc+t	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is key synchronization a concern in storage vs. transport?	In storage you’re syncing across time, not across a live peer; the system must ensure future you (or a service) can find and unwrap the exact keys used years earlier without exposing them today.
hpP)j7&gb5	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does IEEE 1619.1 support flexible deployments?	It defines clear crypto boundaries (records, keys, AAD, tags) and leaves key management specifics to implementations, allowing hardware, software, or hybrid key managers to plug in.
bcOwA~F2ZE	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does TLS depend so heavily on the authenticity of the certificate?	Because the certificate’s public key anchors every subsequent check (DH signature, Finished verification, traffic key derivation); if that binding is wrong, the entire channel can be transparently intercepted.
Ey&PD<F*~b	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is building trust before sending credentials essential on the web?	The chapter emphasizes that browsers must authenticate the server and establish an encrypted channel first, so secrets like passwords aren’t exposed to MITM; only after TLS is established should the application authenticate the user.
xQ}>P((~tQ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What additional safeguards harden PKI beyond basic chain verification?	The text highlights certificate pinning (in curated contexts) and Certificate Transparency logs so forged or mis‑issued certificates are quickly detectable and blockable by clients.
I|4v:}A/cb	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What storage‑encryption pitfall must designs explicitly prevent?	They must prevent reuse of (key, IV/nonce) pairs; the chapter illustrates how IV collisions undermine confidentiality/integrity and mandates designs that enforce uniqueness with random IVs or per‑record random keys.
c$+[^Per$<	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does IEEE 1619.1 separate the cryptographic unit from the key manager?	This separation lets the crypto engine focus on correct record protection while a dedicated component handles key generation, wrapping, archival, and destruction—a practical way to scale key lifecycle securely.
"bP;&#,9Rl2"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is the certificate’s validity window enforced?	Limiting the “Not Before/Not After” window reduces exposure if a private key is later compromised and forces periodic renewal and re‑validation of identity.
vvj>%68z+z	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is CT valuable even after an attack?	Public, append‑only logs enable post‑incident forensics to enumerate all mis‑issued certificates, something impossible in earlier CA breaches where investigators couldn’t reliably list the rogue certs.
Qbm9VasEJy	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How is integrity verified during TLS data transfer in the illustrated configuration?	The record’s MAC/tag is checked after decryption (for the depicted MAC‑inside‑encryption setup) or as part of AEAD verification; a mismatch causes the record to be rejected as tampered.
l}P4/:Jf@8	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the role of the Finished message in the handshake?	It’s the first piece of data protected with the newly derived keys; successful verification proves both parties computed the same session secrets and completes the transition into the secure channel.
i?f[)p|]p:	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is meant by a “host” in security discussions?	A host is any individual computing system (physical or virtual) that performs independent processing—examples include desktops, laptops, servers, IoT devices, and VMs. In many contexts you may also see synonyms like node, endpoint, or device; in this chapter, they’re treated equivalently.
L+DW}tqY)x	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is isolation considered a foundation of host security?	Isolation limits how processes and resources can interact so that one compromised component cannot freely read, modify, or disrupt others. Strong isolation supports confidentiality (no unauthorized reads), integrity (no unauthorized writes), and availability (no single process can starve the CPU or crash the system).
Bre3,t>.?{	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does time slicing contribute to availability on a multi‑process system?	Time slicing lets the operating system interrupt each running process after a small time slice, preventing any one process from monopolizing the CPU. That enforced preemption supports availability by making denial‑of‑service via a tight loop in user code far harder.
r,~Yf$+NRD	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are privileged and unprivileged modes, and why do they matter?	Modern CPUs and OSes run most software in unprivileged mode where direct access to sensitive hardware and configuration is blocked. Only the kernel (or similar trusted code) executes privileged instructions. This separation underpins isolation: user processes cannot reconfigure security‑critical state.
kI~7|)E[LV	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a system call and why is it central to access control?	A system call is an explicit request from an unprivileged process for the OS to perform a privileged operation (like opening a file or creating a socket). Because all such operations funnel through the kernel, the OS can authenticate the requester and apply authorization checks (ACLs, capabilities, MAC policies) before acting.
py=L!:tPw0	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does virtual memory prevent processes from spying on one another?	Each process sees a private virtual address space starting at address 0; the OS and MMU translate those virtual addresses to real RAM. Because addresses outside a process’s mapping simply don’t exist from its perspective, accidental bugs or deliberate reads into another process’s memory are blocked.
mD>jpXy>`1	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is isolating hardware devices from user processes important?	Direct device access allows bypassing policy. By mediating I/O through the OS—rather than letting user code drive disks, cameras, or NICs—permissions can be enforced and damage from compromised programs contained.
txz$f)T{9/	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do user identities relate to process permissions?	Processes typically carry the identity and privileges of the user who launched them (or a constrained service identity). When a process requests access to a resource, the OS evaluates that identity against the resource’s policy to allow or deny the operation.
xvjT+=Mqz&	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do DAC and MAC checks combine on systems like Linux with SELinux?	Under Linux with SELinux, the kernel first evaluates discretionary access control (DAC) like UNIX permissions and POSIX ACLs. If DAC permits, SELinux’s mandatory access control (MAC) policy is then checked; access proceeds only if both layers authorize it. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, this “DAC then MAC” flow is the norm for SELinux.
uohK%A}$MB	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What role do middleware services (like databases) play in authorization?	Middleware often implements its own authentication and fine‑grained ACLs. A client process connects over IPC or TCP, proves identity to the service, and the service enforces row/table or operation‑level permissions independent of the OS’s file permissions.
"phyp,*0#+d"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How is a web browser effectively middleware from a security perspective?	Browsers fetch and run code (HTML/JS/CSS/WebAssembly) from diverse origins. They sit between untrusted web apps and your OS, mediating what that code can access, much like an application platform or middleware runtime.
yNM>.*cFnw	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does Chrome run each tab in a separate process?	Per‑tab processes leverage OS isolation—separate address spaces, handles, and scheduling—to contain compromise to one tab. The tradeoff is increased memory use. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, this design mitigates “drive‑by” site exploits from reading or altering data in other tabs.
iShcM/h|J2	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a sandbox in host security terms?	A sandbox is a restricted execution environment that limits what code can access or modify. It typically enforces a policy on system calls, files, devices, and inter‑process communication to reduce blast radius if code is malicious or buggy.
k=xLY98PAe	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does virtualization differ from sandboxing?	Virtualization simulates hardware or software components (e.g., a full virtual machine with its own OS). Sandboxes can be built with or without virtualization. Virtual machines often provide stronger isolation at higher cost, while sandboxes can be lighter but more porous.
t?[W},vclr	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do mobile OSes (Android/iOS) sandbox apps?	Mobile apps are isolated into per‑app sandboxes with private storage and tight process constraints. Android further applies SELinux policies and restricts which system calls apps may make; both platforms require explicit user‑granted permissions for sensors and PII like camera, mic, or contacts. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, each app “sees” only its own files by default.
q]1|EWF|&R	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why can’t JavaScript in a browser read or write arbitrary files?	Browser engines interpret JS in a constrained environment with no raw filesystem APIs; file access (if any) is mediated through explicit user gestures (e.g., file chooser) and scoped virtual storage (e.g., IndexedDB), preventing stealthy exfiltration of local documents.
z.e[0=4x.E	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What did Meltdown demonstrate about isolation at the hardware level?	Meltdown showed that transient execution and microarchitectural side channels could allow reading arbitrary physical memory, effectively bypassing OS process isolation. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, this 2018 disclosure impacted many CPUs and required deep mitigations.
et6<7,(2iO	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What did Spectre demonstrate about sandbox boundaries?	Spectre abuses branch prediction and speculative execution to leak data across trust boundaries inside one process (e.g., escaping a language runtime sandbox). According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, Spectre can let script code infer values it should not see.
"fxC/#3$lc4"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is Spook.js and why is it “good news” for modern browsers?	Spook.js is a research exploit showing certain Spectre‑class leaks can still occur under narrow conditions, but that Chrome’s site‑isolation (per‑site processes) thwarts practical cross‑site theft. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, Google’s defenses defeat almost all real‑world cases.
Dv|)~1<,?:	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a Trusted Execution Environment (TEE) in the context of TrustZone?	A TEE is a secure world on certain Arm processors where code and secrets execute isolated from the normal OS. TrustZone’s secure world holds keys, verifies boots, and performs cryptography without exposing secrets to normal world code.
vY$&Vr@P><	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does verified boot use a TEE to protect system integrity on phones?	On boot, TEE code uses embedded public keys to verify signatures on the OS image. If tampered or unsigned, the secure world refuses to launch it, preventing persistent compromise even if an attacker controls the normal OS.
PwBB(vk}*%	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why did Blu‑ray playback on PCs get tied to Intel SGX, and what changed?	Studios required a protected path so decryption keys and video frames were opaque even to the OS; SGX enclaves provided that. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, SGX was later dropped from many consumer CPUs after repeated weaknesses, ending Blu‑ray playback support on newer PCs.
B7~l%/h;dP	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What security advantages do virtual machines offer over containers?	VMs provide hardware‑assisted isolation with separate kernels; a guest escape requires breaching the hypervisor boundary. Containers share the host kernel; misconfigurations or kernel bugs can yield host compromise more easily. VMs are therefore preferred for detonating untrusted code.
H_BmDNJpn3	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do modern CPUs expose a hypervisor mode?	A dedicated hypervisor mode lets the host hypervisor remain more privileged than guest kernels, enabling efficient virtualization while ensuring guests cannot access host‑only hardware state—improving both performance and isolation.
H6BX11a8ge	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a buffer overflow in the context of host security?	A buffer overflow occurs when a program writes more data into a fixed‑size memory buffer than it can hold, overwriting adjacent memory (such as control data). This can corrupt execution state and be exploited to hijack control flow.
e`eKp*@7;a	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do subroutines and return addresses create an attack surface?	When code calls a function, it saves a return address on the stack so it knows where to resume. If an attacker overwrites that saved address (e.g., via an overflow), they can redirect execution to code of their choosing.
c7oR|3~Mso	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the stack and how does its LIFO behavior matter?	The stack is a last‑in, first‑out region used to store call frames (saved return addresses, local variables). Calls push frames; returns pop them in reverse order. Overflows that corrupt the topmost frame alter the very next return.
uDua-nE+w^	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why did early stack‑smashing exploits jump into injected data?	In older systems, memory pages could be both writable and executable. Attackers overfilled a buffer with shellcode and changed the return address to the buffer’s start, causing the CPU to execute the attacker’s data as instructions.
u75zRf:^][	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What defense blocked executing data on the stack?	W^X (write‑xor‑execute) or DEP/NX marks pages as either writable or executable, not both. User input lands in writable pages, which the CPU then refuses to execute, turning many code‑injection attempts into crashes rather than compromise.
gjY(Lt@w;>	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	If code injection is blocked, how do return‑to‑libc attacks work?	Rather than injecting code, attackers redirect control flow to existing executable library functions (e.g., system()) and craft the stack so those functions run with attacker‑chosen arguments. Because the code already exists and is executable, DEP doesn’t stop it.
I},YTu>Frc	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is ASLR and how does it help?	Address Space Layout Randomization randomizes where code and libraries load in memory so attackers cannot guess correct jump targets reliably. Combined with DEP, it makes exploitation more brittle and often impractical.
AmKsnfVkPR	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is Return‑Oriented Programming (ROP)?	ROP chains many short instruction sequences (“gadgets”) already present in memory, each ending in a return. By arranging the stack with a series of gadget addresses, attackers synthesize arbitrary logic without injecting new code.
Be*t*Yp1xI	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why can ROP still succeed on some systems (e.g., IoT)?	ASLR may be absent, weak, or have a tiny entropy pool (e.g., small address spaces). With few possible layouts, attackers can brute‑force or easily leak base addresses, making ROP practical. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, IoT platforms often have limited ASLR.
tIP*;p&JD6	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Does strong process isolation still help if exploitation occurs?	Yes. Even when a process is hijacked, isolation and least privilege confine the attacker’s capabilities to that process’s permissions and sandbox, reducing lateral movement and damage.
C3&Lm5Le/F	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does a classic computer virus differ from other malware?	A classic virus inserts its code into other programs or documents so that when those hosts run or open, the virus executes first, does its work (often replication), and then returns control. Modern usage often calls any malware a “virus,” but strictly speaking, viruses are self‑inserting replicators.
JlJsEi.l+Z	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What was the significance of macro viruses?	Macro viruses embed scripts (e.g., in Office documents) that run on open, expanding infection beyond executables to ordinary documents. That shift forced defenders to scan documents as potential carriers.
"r#.feg/tTh"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What defines a worm compared to a virus?	Worms are self‑contained programs that actively propagate across networks by exploiting vulnerabilities or abusing protocols. They don’t need to piggyback on host executables or wait to be launched by users.
f](T$x;P`/	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How did the Morris worm spread in 1988?	It used three vectors: a buffer overflow in the finger service to gain a shell, a sendmail debug feature to execute commands, and password guessing to reuse credentials on networked machines. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, a small “vector” program bootstrapped the main worm onto each victim.
xo}K&X1u|1	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why did the Morris worm cause a denial‑of‑service on infected hosts?	It frequently reinfected machines and—by design—ignored existing infection checks 1 out of every 7 times, multiplying processes until systems bogged down. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, this behavior was likely to hinder simple cleanup but led to service collapse.
rE]tKTKX!i	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How did the “I Love You” mass‑mailer trick users?	It arrived as an email with an attachment named like a text file (e.g., LOVE‑LETTER‑FOR‑YOU.txt.vbs), exploiting hidden extensions on Windows so users believed it was harmless text. On execution it mailed itself to all Outlook contacts and destroyed common file types.
k![1,!{N0k	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What made MyDoom (2004) unusually effective?	It blended social engineering (generic “Mail Delivery System” subjects), rapid address harvesting (contacts, caches, on‑disk files), and broad SMTP blasting to generate massive volumes—an estimated double‑digit percentage of global email at peak—slowing the Internet. According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, notable volumes persisted years later.
DQ}YeB)3]H	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are mass‑mailer worms so disruptive even without deep system damage?	They produce explosive fan‑out, overwhelming mail servers and user inboxes (operational DoS). For users who executed payloads, many variants also deleted or encrypted local data, compounding impact.
Evq.>AcVk0	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do layered controls create defense in depth on a host?	A practical stack includes hardware protections (NX bit, IOMMU), kernel isolation (privilege separation, MAC), application sandboxes (browser/site isolation), and policy in middleware/apps (DB ACLs, document encryption). Breaching one layer still leaves others to stop or limit damage.
d3iE45B.Bp	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do many programs implement their own encryption instead of ACLs for documents?	Encrypting a file with a key derived from a password creates an all‑or‑nothing gate independent of OS accounts, useful for portable or offline protection. The tradeoff is coarse granularity: once decrypted, all operations are possible until re‑encrypted.
ipymM11sl2	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What problem do TEEs aim to solve that OS isolation alone cannot?	They protect secrets and policy enforcement even from a malicious or compromised OS—useful for DRM, mobile payments, and verified boot—by executing sensitive code and holding keys in a hardware‑isolated environment.
gAdQrL/}XC	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is container isolation considered weaker than VM isolation?	Containers share the host kernel; a single kernel bug or mis‑namespaced resource can pierce isolation. VMs place a hypervisor barrier and distinct kernels between guests, raising the difficulty of escape.
GV>$;nQ!Tz	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do browsers customize sandbox restrictions beyond defaults?	Browsers can enforce origin‑based policies (same‑origin), Content‑Security‑Policy headers, permission prompts, and site isolation to tightly scope what code from each origin can load, execute, or access.
iIT%}lO4qv	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What design principle explains per‑permission prompts on mobile?	Least privilege: apps must request only the minimum access they need, and users (or policy) can deny high‑risk sensors or data, shrinking attack surface if an app is compromised.
y@&5YE)p7h	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is control‑flow hijacking and why is it central to exploitation?	Control‑flow hijacking is any technique that diverts execution from the intended path (e.g., by corrupting return addresses, vtables, or function pointers). It’s central because it turns memory corruption into arbitrary code execution or logic reuse.
JFq0C23gb	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does stack layout increase risk for input‑handling code?	Local buffers (for user input) and saved return addresses often reside in the same frame; absent bounds checks, overflow of the buffer overwrites the return address, directly controlling where the function returns.
F?R!S0^Oo]	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are practical mitigations against buffer overflows developers should use?	Use safe languages or safe libraries, perform strict bounds checks, prefer high‑level containers (strings, vectors), enable compiler defenses (stack canaries, control‑flow integrity), and ship with DEP/NX and ASLR on by default.
vMB4ex<f)%	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does “write‑xor‑execute” (W^X) mean in practice?	It enforces that a memory page cannot be both writable and executable simultaneously. Pages containing dynamic data are non‑executable; code pages are read‑only and executable, stopping classic code‑injection attacks.
t.aI>&gl69	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why isn’t ASLR a panacea?	If an attacker can leak one code or stack address, they can compute others; low‑entropy layouts or partial randomization are brute‑forceable; and some embedded devices ship without ASLR. Thus ASLR must be combined with other defenses.
dnc:p^xMB+	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do NIST control families relate to malware risk?	Assessment/Authorization/Monitoring, Incident Response, Maintenance, and System & Information Integrity include controls for detecting, containing, and recovering from malicious code (e.g., scanning, patching, logging, and response playbooks). According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, SP 800‑171 adopts a subset of SP 800‑53 controls for many non‑federal environments.
K.B=B,=mS`	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why has the industry moved away from Java applets in browsers?	Browser‑embedded Java applets repeatedly bypassed their sandbox via vulnerabilities, prompting guidance to remove or restrict them. The web platform evolved toward safer, more constrained models (JS with strict policies and per‑site isolation).
J+YZiz0GLb	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can a VM be used to vet untrusted software safely?	Security teams detonate samples in disposable VMs: run the program, observe behavior, then discard the VM. Even if malware escapes the guest OS, it still must breach the hypervisor to reach the analyst’s machine.
"j)J|y4#2Id"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does strong isolation also matter for honest mistakes, not just attacks?	Bugs can corrupt memory or spin CPU; isolation prevents one faulty process from crashing others or the OS, blunting the impact of ordinary errors as well as malicious intent.
LgKXOOq^|U	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can a worm combine social engineering with technical exploits?	It can entice users to launch a malicious attachment while also exploiting unpatched services to spread automatically, maximizing reach whether or not recipients click.
gj,D`}^.bo	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does “drive‑by download” mean?	It’s a compromise triggered simply by visiting a malicious or compromised site—no explicit download needed—often via browser or plugin vulnerabilities. Per‑tab processes and strong site isolation help minimize what attackers can access if one tab is compromised.
t,xG!$olft	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is password reuse dangerous in networked environments?	If malware steals or guesses a password on one host, it can pivot to other machines where that same password unlocks accounts—amplifying spread and damage across a fleet.
v>r]u:r(>m	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does least privilege limit malware impact on endpoints?	If users run as non‑admin and services follow minimal privilege principles, even successful exploits lack the rights to alter system files, load drivers, or read other users’ data, forcing attackers to chain additional escalations.
"Cw`-jk{#/="	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What core lesson ties host security mechanisms together?	No single barrier is perfect—hardware side channels, software bugs, and human error persist—so combine OS isolation, sandboxing/virtualization, strict permissions, and secure coding to achieve defense in depth and keep failures local rather than catastrophic.
qy7)1]n`Js	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a Trojan horse in cybersecurity?	A Trojan horse is malware that masquerades as something benign or desirable; it looks like a normal program or file, but once executed it performs unwanted or harmful actions.
Br7<%MB%+d	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do Trojan horses commonly entice users to run them?	They often exploit human psychology by posing as attractive downloads like pirated media, game mods, or helpful utilities, or by presenting as legitimate-looking mobile apps in official app stores.
C34~?UaOuz	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why are administrator privileges dangerous in the context of Trojan horses?	If a Trojan gains administrator (root) privileges, it can bypass OS protections, tamper with security tools, install persistence, and hide itself, enabling deeper compromise than an unprivileged user-space program.
yABJBIh4WC	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do modern desktop OSes reduce the risk from downloaded programs?	Systems like Windows tag Internet-downloaded files and run them at lower trust, use prompts (e.g., UAC) for elevation, and can apply integrity levels so low-trust code cannot write to higher-integrity areas by default.
lSQR|nJl{}	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is Virtualization-Based Security (VBS) on Windows?	VBS uses hardware-assisted virtualization to isolate sensitive OS components so that even if an attacker gains admin on the normal OS, core security services remain protected in a more privileged, separate environment.
HaTjUtdc:/	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does an OS-level rootkit hide?	It can intercept system queries to hide files, processes, registry keys, or network connections, making normal tools report falsified, “clean” results while the rootkit remains active.
c`-{v~*%bK	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What risks do firmware or bootloader rootkits pose?	They can persist through OS reinstalls, load before security tools, and control the system at its foundation, making detection and remediation far more difficult.
gAsKt343ZJ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What happened in the Sony BMG XCP incident?	According to Chapter 7 of Discovering Cybersecurity: A Technical Introduction for the Absolute Beginner, Sony’s XCP copy-protection installed a cloaking rootkit via audio CDs, hid its components, phoned home, initially lacked an uninstaller, and created new vulnerabilities, leading to recalls and settlements.
fs.@@-q@wi	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why was the Capcom “Street Fighter V” driver controversy considered rootkit-like?	According to Chapter 7 of Discovering Cybersecurity, Capcom shipped a kernel driver to fight cheating that weakened OS protections, opening the door for abuse; it was withdrawn after disclosure.
x/rUjQ4u,Y	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is notable about the 1989 “AIDS” (Cyborg) ransomware?	According to Chapter 7 of Discovering Cybersecurity, it used symmetric cryptography but stored the key locally, allowing easy decryption and making it more of a precursor than a robust scheme.
jxI]kZkT)N	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why did ransomware surge in the 2010s?	Three factors aligned: plentiful delivery mechanisms (phishing, exploits), fast public-key + symmetric crypto, and widely usable digital payments; Bitcoin’s rise made ransom collection harder to trace or block.
z}q{XllJyq	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What cryptographic pattern do many modern ransomware families use?	Hybrid cryptography: fast symmetric encryption (e.g., AES) per file, with each file key encrypted using public-key crypto, plus higher-level wrapping that keeps the private decryption material off the victim’s machine.
r57>l)d1qj	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does a hybrid ransomware key flow typically work?	According to Chapter 7 of Discovering Cybersecurity, a server holds an RSA key pair; the malware embeds the server’s public key, generates a local RSA pair, encrypts the local private key with the server public key, uses per-file AES keys to encrypt files, then encrypts those AES keys with the local public key; only the attacker’s server can unwrap everything.
OQ?>e,A4c|	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why generate a unique AES key per file in ransomware?	It allows rapid encryption, enables “proof-of-decrypt” on a sample file, limits damage if a single key is exposed, and avoids reuse weaknesses across many files.
i_qwC>5Wn^	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can ransomware victims sometimes recover without paying?	If robust, isolated, and recent backups exist (offline/cloud with versioning), victims can wipe, rebuild, and restore data; some EDR/backup tools automate ransomware rollback from snapshots.
v}+<5E<BD$	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a botnet?	A botnet is a collection of compromised machines (“bots” or “zombies”) under the control of an attacker’s command-and-control (C2) infrastructure, used for tasks like DDoS, spam, credential stuffing, or proxying.
LQA4kZJkI0	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do bots communicate with their controllers?	Compromised hosts beacon to C2 servers or use P2P overlays; C2 distributes commands, updates, and targets, coordinating large-scale actions.
lNnr>!?sWO	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What made Mirai’s botnet growth so explosive?	According to Chapter 7 of Discovering Cybersecurity, Mirai scanned for insecure IoT devices (often with default credentials), conscripted them, and amassed ~200,000–300,000 devices capable of ~1.1 Tbps DDoS traffic.
b!r>0/|gA!	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What were Mirai’s early targets and why?	According to Chapter 7 of Discovering Cybersecurity, early Mirai attacks hit Minecraft servers; DDoS-for-hire (“DDoS-as-a-service”) let paying customers knock rivals offline for financial advantage.
h}o$`4_Sa>	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Which high-profile site was overwhelmed by Mirai?	According to Chapter 7 of Discovering Cybersecurity, the KrebsOnSecurity blog was taken down by an unprecedented volume of Mirai-driven DDoS traffic despite professional mitigation.
N@4+Mke!L3	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a Distributed Denial-of-Service (DDoS) attack?	A DDoS floods a target service with more traffic or requests than it can handle, degrading or denying service to legitimate users; botnets enable huge, geographically distributed floods.
u{Gh5wy-_4	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is isolation a recurring defensive theme against malware?	Isolation contains failures: if untrusted code is confined (process sandbox, VM, or container), its effects are limited, reducing the blast radius even when exploitation occurs.
L1iBsyKDXq	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is static analysis for malware?	Static analysis inspects a program without executing it—using signatures, structure, and code features—to classify or learn about potential malicious behavior.
PdZr7i^uYd	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are signature-based detections?	They compare code or file hashes against known-malware indicators; they’re precise for known samples but can’t catch novel threats until signatures are created and distributed.
jH3-Lp;!)S	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a polymorphic virus?	It’s malware that mutates its decryptor stub and re-encrypts its payload per infection, thwarting simple byte-pattern signatures and forcing defenders to emulate or partially execute to reveal a stable payload.
uT8C6@pFeH	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How did AV engines adapt to polymorphism?	They embedded emulators/sandboxes to execute a short path, trigger decryptors, and then scan the decrypted body with signatures—still largely a static pre-execution workflow.
gir:flDCD{	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are heuristic rules in malware detection?	Heuristics are rule-based “best guesses” that infer maliciousness from suspicious code patterns or behaviors (e.g., jumping to the end of a program, modifying the entry point, then writing to other executables).
GjuENf9P&e	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What major limitation do heuristics face?	They produce false positives/negatives and are adversarially brittle—once public, attackers design around them; they cannot be perfect due to theoretical limits like reductions from the Halting Problem.
xH<3!s?jvL	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What modern static signals help detect malware quickly?	Cloud reputation and hash databases (e.g., widespread hash sharing) and structural features (imports, packers) improve speed, while still struggling with new or obfuscated samples.
z[YdvR>Pr{	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is dynamic analysis for malware?	It observes actual execution in a controlled environment (emulator, sandbox, or VM), watching file, registry, process, and network activity to decide if software is malicious.
QJEuP!gj[u	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do “detonations” work in malware sandboxes?	A sample is executed in an instrumented VM for a short period; the system logs behaviors (encryption sprees, persistence writes, C2 beacons) and scores maliciousness, then resets the VM to a clean snapshot.
s[x6olYU|~	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why can dynamic analysis still miss threats?	Some malware is environment-aware (delays, VM checks), requires user input, exploits kernel/zero-day paths invisible to userland monitors, or activates only under specific triggers.
Jlmf<w392C	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What role does human vigilance play against targeted malware?	User skepticism can stop high-end attacks that bypass tooling; for example, not clicking a suspicious link and submitting it for analysis can avert “zero-day” device compromise.
HGV[fH4lNl	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are mitigation (in-attack) host strategies?	These throttle or block dangerous behavior at runtime—e.g., host intrusion prevention rules, filesystem write-blocks to protected paths, or policy controls that stop script or macro abuse.
"pEVs#IVfDi"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why did early “behavior blockers” frustrate users?	They fired too many prompts and lacked context, training users to click through alerts; modern systems bake policies centrally and apply fewer, higher-confidence blocks.
Hy){;r6=g6	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is Endpoint Detection and Response (EDR)?	EDR continuously records endpoint events, detects incidents via analytics, contains threats on hosts, assists investigations, and guides remediation to restore affected systems.
"J8#LZ]Zvqe"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does EDR help during ransomware events?	It can detect rapid, anomalous encryption, isolate endpoints from the network, kill processes, roll back file changes if integrated with snapshots, and provide forensic trails for response.
NXG0:Iptsx	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are recovery-and-response host strategies?	They detect compromises post-facto and enable restoration—file integrity monitoring to flag unauthorized changes and integrated backup/restore to undo damage quickly.
JD8sMZoDwd	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does file integrity monitoring (FIM) differ today from the 1990s?	Modern FIM uses OS event streams and central policies to contextualize changes, reduce noise, and escalate only meaningful anomalies, rather than naive periodic checksums of everything.
"BQO/i3y3#/"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does strong backup posture blunt ransomware?	Versioned, immutable, offline or cloud backups let organizations restore without paying; automation can speed recovery and limit downtime.
tE7sFh!L)5	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is least privilege essential on endpoints?	If apps run with only the permissions they need, even successful exploits have limited reach—fewer system changes, no kernel access, and reduced ability to persist or laterally move.
Bsn}qs+m-l	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do sandboxes in browsers protect users?	Browsers run site code (e.g., JavaScript) in constrained processes with tight OS policies; per-tab/site isolation means a compromise in one tab is less likely to spill into others.
q%c6*.vye$	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is one-tab-per-process beneficial?	Separate processes get separate memory spaces and OS boundaries; if a malicious page compromises its renderer, it has a harder time peeking at credentials or data in other tabs.
u$qUO=ByC_	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What makes IoT devices attractive to botnets?	They’re numerous, often unpatched, ship with default passwords, expose services to the Internet, and run minimal OSes that lack mitigations like strong ASLR or W^X memory protections.
O[2&=3P2u}	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can organizations reduce IoT botnet risk?	Change defaults, segment networks, disable unnecessary services, apply updates, monitor outbound anomalies, and prefer devices with secure boot and automatic patching.
JrtUBP,mGZ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What practical steps reduce ransomware exposure?	Harden email and RDP, enforce MFA, patch rapidly, restrict macros, apply application allowlisting, segment networks, and maintain tested, offline-capable backups.
"uPZQ#pcwvg"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is paying a ransom risky beyond ethics?	Payment doesn’t guarantee decryption or full data recovery, marks you as a payer for future extortion, and may carry legal and reputational risks.
bH4wi-ie=i	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What host signals often precede ransomware detonation?	Unusual tool usage (e.g., PsExec, vssadmin deletions), credential dumping, lateral movement, mass file handle opens, and rapid write patterns across many file types.
fVEL;~5V$k	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do attackers try to evade sandboxes?	They check for low CPU cores, unusual drivers, MAC addresses, common VM devices, short system uptimes, presence of debuggers, or require user interactions/time delays before activating.
s9:l:}6(Dk	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What’s the difference between a virus and a worm?	A classic virus attaches to other files and activates when they run; a worm is self-contained and actively propagates over networks or via messaging without user assistance.
z+Io.L06gZ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is “root” access such a tipping point for attackers?	Root/admin can load kernel drivers, disable defenses, alter logs, and control persistence—effectively dissolving the isolation and mediation that protect the system.
B%:mDCL!ni	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does defense-in-depth apply to hosts?	Multiple layers—OS isolation, app sandboxes, endpoint controls, network filtering, and backups—ensure that if one fails (e.g., a user clicks a phish), others reduce impact.
kKH!d4eUxO	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What central lesson runs through modern host security?	Containment and recovery: assume some code will run or a control will fail, so confine untrusted activity and be able to rapidly detect, isolate, and restore from clean sources.
(3V;eq{-n	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is cloud computing in practical terms?	Cloud computing is a model for on‑demand access to shared computing resources—networks, servers, storage, applications, and services—that can be rapidly provisioned and released with minimal management effort. In practice, that means teams spin up what they need, when they need it, pay for use, and shut it down when done.
"M#/lkL>WwB"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are the primary deployment models of cloud computing?	The common deployment models are private cloud (single organization), community cloud (specific group with shared concerns), and public cloud (services available to the general public). Each offers different trade‑offs in control, cost, compliance, and risk.
v,D9%0i:qB	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are the main service models used in cloud computing?	Software as a Service (SaaS) delivers complete applications; Platform as a Service (PaaS) provides managed runtimes and developer services; Infrastructure as a Service (IaaS) offers compute, storage, and networking primitives. Responsibility for security controls shifts as you move from IaaS (more customer responsibility) to SaaS (more provider responsibility).
cOuG!z(12G	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is data called the “golden egg” in cloud security?	Data is the asset attackers target and organizations must protect; everything else (compute, network, applications) exists to process, move, and present that data. Protecting confidentiality, integrity, and availability of data therefore dictates how identity, encryption, logging, and governance are designed and prioritized.
dis3_Il=2?	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does data location affect cloud privacy and security controls?	Where data resides controls which privacy laws, breach‑notification rules, and sector regulations apply, and it can change how keys are generated, stored, and escrowed. For example, traffic between two VMs in a multi‑tenant public cloud often requires encryption and strict key management, even if traffic between two servers in the same private rack might be permitted in plaintext due to different exposure and regulatory expectations.
iS_A8O:@rx	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are typical encryption patterns for data in the cloud?	A robust baseline is: encrypt in transit (TLS for client/server and service‑to‑service), encrypt at rest (disk/volume/object encryption), and encrypt in use where feasible (application‑level or envelope encryption). Keys should be managed in an HSM/KMS with role separation, least privilege, rotation, auditing, and geo‑redundancy.
e$L,TY_Hpl	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why is transparency about security controls critical in the cloud?	When relying on someone else’s infrastructure, customers need visibility (attestations, audit logs, configuration evidence, reports) to assess risk, verify compliance, and respond to incidents. Without provider transparency, customers cannot meet due‑diligence obligations or maintain trust.
gHCzp9=XVC	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can shared infrastructure strengthen security rather than weaken it?	Large multi‑tenant providers can invest in specialized defenses (dedicated red teams, hardware root‑of‑trust, global DDoS absorption, continuous patch pipelines) at scale. When operated correctly, pooled resources and standardized stacks reduce drift and patch lag compared to bespoke, under‑resourced environments.
"yJRyc%#@?Z"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why does multi‑tenancy raise security concerns?	Multiple customers share physical resources; a flaw in isolation (hypervisor, container runtime, control plane) can become a cross‑tenant attack path. The weakest tenant’s hygiene can also increase noise or abuse risks for neighbors (e.g., IP reputation). Strong isolation, noisy‑neighbor controls, and per‑tenant governance boundaries are essential.
tU0LOmjzlg	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are key risks unique to cloud compared to traditional on‑premises IT?	Control plane compromise, misconfigurations of identity/permissions, opaque provider dependencies, jurisdictional issues, dynamic and ephemeral resources that evade legacy scanning, and shared responsibility misunderstandings. These risks require identity‑first security, policy‑as‑code, automated guardrails, and continuous validation.
AY?HoTdSoQ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What advantages does cloud bring that can improve security outcomes?	Elastic capacity to absorb attacks, faster patch and replace cycles (immutable infrastructure), standardized images, pervasive logging, rapid forensics at scale, and the ability to test controls in isolated sandboxes. Cloud agility also accelerates security innovation when paired with automation and strong governance.
j>L>|DJIFm	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should service level agreements (SLAs) address security?	SLAs should explicitly include security and privacy clauses: uptime and data durability metrics, incident notification windows, breach handling processes, log retention/exports, audit support, data residency, key management options, vulnerability remediation timelines, and right‑to‑test provisions (under coordinated disclosure rules).
ql(q[07D4j	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can organizations phase their migration to the cloud?	Adopt a stair‑step approach: consolidate and standardize, virtualize, automate, adopt utility pricing and self‑service, then evolve to cloud‑native services. Start with low‑risk workloads, build repeatable landing zones, implement identity and network guardrails, and expand iteratively.
tn+=gp:UeH	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is meant by cloud’s “rapid elasticity” and why does it matter?	Rapid elasticity is the ability to dynamically scale resources up or down in near real time. It supports mission surges, reduces over‑provisioning, lowers cost, and improves resilience (e.g., scaling to absorb DDoS or seasonal demand).
fy6E.eBs0}	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do responsibilities differ across SaaS, PaaS, and IaaS?	In IaaS, customers secure OS, apps, data, IAM, and network configurations; providers secure the physical infrastructure and core virtualization. In PaaS, providers also secure the runtime and managed services; customers focus on application code, identities, and data. In SaaS, providers secure the full stack; customers secure data classification, access controls, and configuration.
Gs1BSeWp,	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can government and national‑security missions leverage cloud safely?	Use vetted community or government clouds for regulated workloads; enforce strong identity (federation, MFA, phishing‑resistant authenticators), segment networks, require customer‑managed keys, adopt assured workloads and supply‑chain controls, and codify compliance (e.g., policy as code aligned to relevant baselines).
oNoAMlY2:o	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What cultural barriers slow cloud adoption for sensitive missions?	Attachment to perimeter‑centric models, fear of losing “hands‑on” control, and uncertainty about new operational playbooks. Overcoming this requires executive sponsorship, clear shared‑responsibility models, hands‑on labs, wins from pilot projects, and transparent measurement of risk reduction and mission agility.
Bt7-=;Tyx,	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does public perception influence cloud security programs?	Adoption hinges not only on technical controls but on trust. Clear communication, demonstrable controls, third‑party attestations, and customer‑visible evidence (e.g., access logs, data‑flow maps) help align perception with reality and reduce hesitation from leadership and the public.
My))):qaZ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What role do standards bodies play in cloud security?	Standards bodies define reference models, terminology, control catalogs, and interoperability profiles. Their work underpins comparability across providers, supports certification regimes, and helps organizations structure policies and audits consistently across multi‑cloud estates.
"A#qzDSe>>G"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the value of coalitions like the Cloud Security Alliance?	They crowd‑source best practices, publish practical guidance, and create common risk assessment frameworks that vendors and customers can use. This accelerates shared learning globally and helps align cloud providers and consumers on control expectations and transparency norms.
"v4.a-&+lz#"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can cloud reduce the “static target” problem?	Distributing data and workloads across availability zones and regions, rotating encryption keys, and moving from static servers to ephemeral instances makes infrastructure less predictable, increasing attacker cost and reducing the value of targeting any single fixed host.
dgbDk_qs67	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should organizations handle multi‑tenant isolation concerns?	Demand documented isolation controls (hypervisor hardening, vTPM/SEV/TEE support), per‑tenant encryption keys, dedicated control‑plane options where available, network micro‑segmentation, and continuous assurance (penetration tests, isolation‑break simulations, and third‑party assessments).
42hcg6>|~	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What governance elements are essential for cloud security at scale?	A cloud security reference architecture; identity‑first design (centralized IAM, least privilege, strong MFA); network segmentation and egress controls; secrets management; baseline hardened images; vulnerability/patch automation; logging/telemetry pipelines; incident response runbooks; and compliance‑as‑code with preventive/detective guardrails.
"g/y0>WPd#*"	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Why do clear shared‑responsibility models matter?	Misunderstandings lead to gaps. Providers are responsible for security “of” the cloud; customers for security “in” the cloud. Mapping each control (e.g., backup, patching, key rotation) to an owner avoids assumptions and ensures controls are implemented and tested.
b$[OF`b9LV	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are pragmatic first security steps before moving sensitive workloads?	Inventory data and classify it; establish identity federation and MFA; design a hub‑and‑spoke network with egress controls; define key‑management patterns; build a baseline landing zone with guardrails; and create a minimal incident response playbook specific to cloud contexts.
hP&U/E@I8C	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should encryption keys be managed in cloud environments?	Use provider KMS/HSM with envelope encryption, role separation for key use vs. key management, customer‑managed keys for sensitive data, key rotation and revocation workflows, dual‑control for critical changes, and thorough logging/auditing of all key operations.
ISR[RF^LL+	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the role of SLAs and legal language across borders?	Because cloud services and data flows are transnational, contracts must include data residency, cross‑border transfer mechanisms, jurisdiction for disputes, and security clauses aligned to applicable regulations. This avoids ambiguity when laws differ across regions.
hB@!a[oloq	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do cost and agility arguments support cloud adoption in the public sector?	Cloud reduces time‑to‑capability (from months to days/minutes), enables pay‑for‑use economics, and allows agencies to scale for missions without large capital expenditures. These benefits are compelling when paired with strong governance and compliance.
diz}kT`k>}	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What does a cloud security architecture stack typically include?	A secure access layer (zero trust access, device posture), a cloud edge (WAF, DDoS, CDN), enterprise/data‑center edge integration, a cloud service security layer (CASB/CSPM/CIEM), and a security services layer (SIEM/SOAR, EDR, threat intel) bound together by identity.
D~[{K7m56?	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How do transparency and proprietary security coexist?	Providers can publish control objectives, third‑party audit results, and customer‑visible evidence (e.g., logs, configurations) without disclosing exploitable implementation detail. Risk‑based transparency enables customer assurance while preserving provider defenses.
uQ!3<=b9+8	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are practical measures to counter cloud misconfiguration risk?	Adopt policy‑as‑code and continuous compliance (CSPM), pre‑approved templates, change guards (preventive SCPs/OPA policies), least‑privilege IAM with periodic access reviews, automated secret scanning, and drift detection with auto‑remediation.
kyrrMxROIZ	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can organizations prepare for DDoS in the cloud?	Leverage provider‑native DDoS protection, autoscaling, rate limiting, CDN offload, and regional failover. Test with game days; instrument metrics to trigger automated scaling and routing; and maintain upstream communications playbooks.
AGveTM?IZ*	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is the role of logging and telemetry in cloud security?	Comprehensive logs (control plane, data plane, access logs, DNS, network flow) feed detection, forensics, and compliance. Centralize, retain with appropriate lifecycles, and protect logs with immutability controls; enrich with identity and asset context for usable signal.
lSf5qsFwqw	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How does zero trust align with cloud?	Zero trust assumes no implicit trust based on network location. In the cloud this means strong identity for users and workloads, continuous verification of device and context, least‑privilege access to applications and data, and tight egress controls—implemented as software‑defined policies rather than static perimeters.
Gwq%QqIEe>	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What safeguards help when using public cloud for sensitive analytics?	Use privacy‑preserving patterns (tokenization, differential privacy where applicable), isolate via VPCs and private endpoints, process on anonymized or synthetic data where possible, and apply strict access stratification with just‑in‑time elevation and session recording for high‑risk access.
HV_n&{rcHm	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should incident response adapt for cloud?	Pre‑stage playbooks and automation (isolate instances, snapshot disks, quarantine credentials, rotate keys), maintain golden AMIs/images, enable forensic logging, and define escalation paths with providers. Practice cloud‑specific tabletop exercises and game days.
AE6R>`(p]&	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What organizational practices accelerate secure cloud adoption?	Create a Cloud Center of Excellence, adopt product‑oriented platform teams, publish paved‑road patterns, tie funding to control adoption, and measure security outcomes (mean time to remediate, percent of infrastructure as code, policy violations prevented) rather than only activity.
K7K%dWVM2K	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What are signs an organization has reached “inflated expectations” in cloud?	Believing cloud alone solves security, cost, or agility without operating‑model change; assuming “the provider handles it all”; skipping foundational identity and governance work; or attempting big‑bang migrations without landing zones and guardrails.
Ne+zH;J{X^	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can cloud help national security missions shorten decision cycles?	Standardized, web‑enabled workflows and elastic compute reduce procurement and provisioning timelines from months to weeks or days, enabling faster intelligence fusion, logistics planning, and command‑and‑control support when coupled with appropriate classification boundaries and assured connectivity.
Mzmc_Fo&S^	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What is a balanced stance on innovation vs. security in cloud?	Use orderly, risk‑based migration: pilot, measure, and iterate. Do not freeze innovation due to security fears, but do not deploy high‑risk workloads without guardrails. Pair rapid experimentation with sandboxes, kill switches, and pre‑approved reference patterns.
d5)nIdhF0H	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	When should organizations pursue private/community clouds instead of public?	When regulatory, latency, or sovereignty constraints cannot be met in public regions; when dedicated control planes and custom hardware are required; or when mission interconnects demand common baselines and governance across a defined partner community.
ggd%%v9:>)	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What’s a realistic expectation for cloud security perfection?	No system achieves perfect security. Aim for demonstrable risk reduction, resilience, and rapid recovery: prevent what you can, detect quickly, respond effectively, and learn continuously. Cloud makes these cycles faster when paired with automation and disciplined operations.
y~bt%{[>Ut	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Which claims in this Q&A reflect the 2010 HSPI forum perspectives and why does that matter?	According to HSPI Issue Brief 07 (2010), panelists emphasized: building security into cloud design from the outset; needing unprecedented cooperation across stakeholders; the centrality of protecting data; optimism that sharing/resource pooling and on‑demand self‑service enable innovation; concerns about multi‑tenancy and the need for standards, SLAs, and cross‑border legal language; the view that public perception and culture can hinder adoption; staged migration for agencies; and the role of alliances and coalitions to accelerate best practices. Citing these points makes clear which takeaways derive from that forum’s perspectives and era, helping readers distinguish time‑bound viewpoints from general cloud principles.
ew;3u@AMjs	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	Did experts predict rapid dominance of cloud and what implication follows for policy?	According to HSPI Issue Brief 07 (2010), some experts anticipated the majority of global computing would move to cloud within a few years, driven by economics and technology advances. Policymakers should therefore plan governance, standards, workforce upskilling, and cross‑jurisdictional legal frameworks in advance, rather than react after migration is already underway.
xn@$xnwb)B	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How should agencies handle security when adopting social and Web 2.0 capabilities via cloud?	Adopt explicit acceptable‑use and monitoring policies, segment workloads, apply data‑loss prevention and egress controls, and provide safe, managed channels for collaboration tools. Measure benefits (faster coordination, shorter procurement cycles) against risk controls to justify continued use.
zDYk6k]Hfq	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What practical checklist helps an executive “get the house in order” before cloud expansion?	1) Centralize identity and enable phishing‑resistant MFA. 2) Define data classification and tagging. 3) Build a secure landing zone with baseline networks, accounts, and guardrails. 4) Establish key management and secrets handling. 5) Instrument comprehensive logging. 6) Train teams and run game days. 7) Negotiate SLAs with security clauses before moving sensitive workloads.
Ib9}|zrHz$	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	How can transparency be demonstrated without inviting attacks?	Publish third‑party audit reports, control mappings, data‑flow diagrams, and customer‑visible control evidence (e.g., per‑tenant access logs), while withholding detailed network topologies and exploit‑useful configurations. Provide customer‑driven attestations through secure portals under NDA rather than public dumps.
AOT2TtXems	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What collaboration model best addresses cross‑border cloud security issues?	Multi‑stakeholder collaboration among government, industry, and academia: standards bodies define interoperable controls; industry implements and discloses attestations; governments harmonize legal frameworks; academia evaluates and stress‑tests models. This aligned model scales with the inherently transnational nature of cloud services.
HElvq:=bom	Basic	Launch into Computing::Unit 08 - Principles of Cyber Security	What single mindset shift most improves cloud security posture?	Move from perimeter trust to identity‑centric, least‑privilege access with continuous verification and automated guardrails. Treat infrastructure as code, enforce policy at every layer, and assume compromise so detection and recovery are first‑class design goals.
